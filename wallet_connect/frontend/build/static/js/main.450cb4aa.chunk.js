/*! For license information please see main.450cb4aa.chunk.js.LICENSE.txt */
(this.webpackJsonpstreamlit_wallet_connect=this.webpackJsonpstreamlit_wallet_connect||[]).push([[0],{121:function(e){e.exports=JSON.parse('{"address":"0x35cA20b4c393dD3C425565E0DC2059Eebe9e1422","abi":[{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"TokenCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"_uri","type":"string"},{"internalType":"uint256","name":"supply","type":"uint256"}],"name":"createToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"creatorAddresses","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"maxSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"mintingActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"supply","type":"uint256"}],"name":"setMaxSupply","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"name":"setTokenPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"_uri","type":"string"}],"name":"setTokenURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"toggleMintingActive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenPrices","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenURIs","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawETH","outputs":[],"stateMutability":"nonpayable","type":"function"}],"transactionHash":"0xc41da65198ade3584d51eff1e4673cdc3f89e4bc324fef5483f0c7d43829894c","receipt":{"to":null,"from":"0xdcc199020d8ac58339A07A37a87ad4F305E8fB15","contractAddress":"0x35cA20b4c393dD3C425565E0DC2059Eebe9e1422","transactionIndex":17,"gasUsed":"2077441","logsBloom":"0xblockHash":"0x0db8cc5cc6cae8fd9dc3c5a4ad2d113be98ed27803da25323252718745958686","transactionHash":"0xc41da65198ade3584d51eff1e4673cdc3f89e4bc324fef5483f0c7d43829894c","logs":[{"transactionIndex":17,"blockNumber":29704880,"transactionHash":"0xc41da65198ade3584d51eff1e4673cdc3f89e4bc324fef5483f0c7d43829894c","address":"0x35cA20b4c393dD3C425565E0DC2059Eebe9e1422","topics":["0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","0x0000000000000000000000000000000000000000000000000000000000000000","0x000000000000000000000000dcc199020d8ac58339a07a37a87ad4f305e8fb15"],"data":"0x","logIndex":68,"blockHash":"0x0db8cc5cc6cae8fd9dc3c5a4ad2d113be98ed27803da25323252718745958686"},{"transactionIndex":17,"blockNumber":29704880,"transactionHash":"0xc41da65198ade3584d51eff1e4673cdc3f89e4bc324fef5483f0c7d43829894c","address":"0x0000000000000000000000000000000000001010","topics":["0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63","0x0000000000000000000000000000000000000000000000000000000000001010","0x000000000000000000000000dcc199020d8ac58339a07a37a87ad4f305e8fb15","0x0000000000000000000000003a22c8bc68e98b0faf40f349dd2b2890fae01484"],"data":"0x000000000000000000000000000000000000000000000000000b1221e364e20100000000000000000000000000000000000000000000000006f05b59d3b200000000000000000000000000000000000000000000000000e314e560cc5081818c00000000000000000000000000000000000000000000000006e54937f04d1dff0000000000000000000000000000000000000000000000e314f072ee33e6638d","logIndex":69,"blockHash":"0x0db8cc5cc6cae8fd9dc3c5a4ad2d113be98ed27803da25323252718745958686"}],"blockNumber":29704880,"cumulativeGasUsed":"6322222","status":1,"byzantium":true},"args":["Access","ACCESS"],"numDeployments":1,"solcInputHash":"081595c904545a6e0cc10371e20b9b50","metadata":"{\\"compiler\\":{\\"version\\":\\"0.8.9+commit.e5eed63a\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"_name\\",\\"type\\":\\"string\\"},{\\"internalType\\":\\"string\\",\\"name\\":\\"_symbol\\",\\"type\\":\\"string\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"account\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"operator\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"bool\\",\\"name\\":\\"approved\\",\\"type\\":\\"bool\\"}],\\"name\\":\\"ApprovalForAll\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"previousOwner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"OwnershipTransferred\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"tokenId\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"TokenCreated\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"operator\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256[]\\",\\"name\\":\\"ids\\",\\"type\\":\\"uint256[]\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256[]\\",\\"name\\":\\"values\\",\\"type\\":\\"uint256[]\\"}],\\"name\\":\\"TransferBatch\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"operator\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"TransferSingle\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"string\\",\\"name\\":\\"value\\",\\"type\\":\\"string\\"},{\\"indexed\\":true,\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"URI\\",\\"type\\":\\"event\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"account\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"balanceOf\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address[]\\",\\"name\\":\\"accounts\\",\\"type\\":\\"address[]\\"},{\\"internalType\\":\\"uint256[]\\",\\"name\\":\\"ids\\",\\"type\\":\\"uint256[]\\"}],\\"name\\":\\"balanceOfBatch\\",\\"outputs\\":[{\\"internalType\\":\\"uint256[]\\",\\"name\\":\\"\\",\\"type\\":\\"uint256[]\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"price\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"string\\",\\"name\\":\\"_uri\\",\\"type\\":\\"string\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"supply\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createToken\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"creatorAddresses\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"account\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"operator\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isApprovedForAll\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"maxSupply\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"tokenId\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"mint\\",\\"outputs\\":[],\\"stateMutability\\":\\"payable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"mintingActive\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"name\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"nextTokenId\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"owner\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"renounceOwnership\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256[]\\",\\"name\\":\\"ids\\",\\"type\\":\\"uint256[]\\"},{\\"internalType\\":\\"uint256[]\\",\\"name\\":\\"amounts\\",\\"type\\":\\"uint256[]\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"data\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"safeBatchTransferFrom\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"data\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"safeTransferFrom\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"operator\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bool\\",\\"name\\":\\"approved\\",\\"type\\":\\"bool\\"}],\\"name\\":\\"setApprovalForAll\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"tokenId\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"supply\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setMaxSupply\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"tokenId\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"price\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setTokenPrice\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"tokenId\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"string\\",\\"name\\":\\"_uri\\",\\"type\\":\\"string\\"}],\\"name\\":\\"setTokenURI\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"bytes4\\",\\"name\\":\\"interfaceId\\",\\"type\\":\\"bytes4\\"}],\\"name\\":\\"supportsInterface\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"symbol\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"tokenId\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"toggleMintingActive\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"tokenPrices\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"tokenURIs\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"totalSupply\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"transferOwnership\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"tokenId\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"uri\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"withdrawETH\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"kind\\":\\"dev\\",\\"methods\\":{\\"balanceOf(address,uint256)\\":{\\"details\\":\\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\\"},\\"balanceOfBatch(address[],uint256[])\\":{\\"details\\":\\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\\"},\\"isApprovedForAll(address,address)\\":{\\"details\\":\\"See {IERC1155-isApprovedForAll}.\\"},\\"mint(uint256)\\":{\\"details\\":\\"Mint a particular tokenId \\"},\\"owner()\\":{\\"details\\":\\"Returns the address of the current owner.\\"},\\"renounceOwnership()\\":{\\"details\\":\\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\\"},\\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\\":{\\"details\\":\\"See {IERC1155-safeBatchTransferFrom}.\\"},\\"safeTransferFrom(address,address,uint256,uint256,bytes)\\":{\\"details\\":\\"See {IERC1155-safeTransferFrom}.\\"},\\"setApprovalForAll(address,bool)\\":{\\"details\\":\\"See {IERC1155-setApprovalForAll}.\\"},\\"setMaxSupply(uint256,uint256)\\":{\\"details\\":\\"Set token\'s max supply \\"},\\"setTokenPrice(uint256,uint256)\\":{\\"details\\":\\"Set a price for a token\\"},\\"setTokenURI(uint256,string)\\":{\\"details\\":\\"Set the metadata for a token\\",\\"params\\":{\\"_uri\\":\\"The metadata uri (e.g. ipfs://...)\\",\\"tokenId\\":\\"The token ID\\"}},\\"supportsInterface(bytes4)\\":{\\"details\\":\\"See {IERC165-supportsInterface}.\\"},\\"toggleMintingActive(uint256)\\":{\\"details\\":\\"Set the minting active flag\\"},\\"transferOwnership(address)\\":{\\"details\\":\\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\\"},\\"uri(uint256)\\":{\\"details\\":\\"Return the URI for a token\\"},\\"withdrawETH()\\":{\\"details\\":\\"Withdraw ether to owner\'s wallet\\"}},\\"version\\":1},\\"userdoc\\":{\\"kind\\":\\"user\\",\\"methods\\":{},\\"version\\":1}},\\"settings\\":{\\"compilationTarget\\":{\\"contracts/Access.sol\\":\\"Access\\"},\\"evmVersion\\":\\"london\\",\\"libraries\\":{},\\"metadata\\":{\\"bytecodeHash\\":\\"ipfs\\",\\"useLiteralContent\\":true},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"@openzeppelin/contracts/access/Ownable.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\nimport \\\\\\"../utils/Context.sol\\\\\\";\\\\n\\\\n/**\\\\n * @dev Contract module which provides a basic access control mechanism, where\\\\n * there is an account (an owner) that can be granted exclusive access to\\\\n * specific functions.\\\\n *\\\\n * By default, the owner account will be the one that deploys the contract. This\\\\n * can later be changed with {transferOwnership}.\\\\n *\\\\n * This module is used through inheritance. It will make available the modifier\\\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\\\n * the owner.\\\\n */\\\\nabstract contract Ownable is Context {\\\\n    address private _owner;\\\\n\\\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\\\n\\\\n    /**\\\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\\\n     */\\\\n    constructor() {\\\\n        _transferOwnership(_msgSender());\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Throws if called by any account other than the owner.\\\\n     */\\\\n    modifier onlyOwner() {\\\\n        _checkOwner();\\\\n        _;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the address of the current owner.\\\\n     */\\\\n    function owner() public view virtual returns (address) {\\\\n        return _owner;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Throws if the sender is not the owner.\\\\n     */\\\\n    function _checkOwner() internal view virtual {\\\\n        require(owner() == _msgSender(), \\\\\\"Ownable: caller is not the owner\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Leaves the contract without owner. It will not be possible to call\\\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\\\n     *\\\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\\\n     * thereby removing any functionality that is only available to the owner.\\\\n     */\\\\n    function renounceOwnership() public virtual onlyOwner {\\\\n        _transferOwnership(address(0));\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\\\n     * Can only be called by the current owner.\\\\n     */\\\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\\\n        require(newOwner != address(0), \\\\\\"Ownable: new owner is the zero address\\\\\\");\\\\n        _transferOwnership(newOwner);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\\\n     * Internal function without access restriction.\\\\n     */\\\\n    function _transferOwnership(address newOwner) internal virtual {\\\\n        address oldOwner = _owner;\\\\n        _owner = newOwner;\\\\n        emit OwnershipTransferred(oldOwner, newOwner);\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\n/**\\\\n * @dev Contract module that helps prevent reentrant calls to a function.\\\\n *\\\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\\\n * available, which can be applied to functions to make sure there are no nested\\\\n * (reentrant) calls to them.\\\\n *\\\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\\\n * `nonReentrant` may not call one another. This can be worked around by making\\\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\\\n * points to them.\\\\n *\\\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\\\n * to protect against it, check out our blog post\\\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\\\n */\\\\nabstract contract ReentrancyGuard {\\\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\\\n    // word because each write operation emits an extra SLOAD to first read the\\\\n    // slot\'s contents, replace the bits taken up by the boolean, and then write\\\\n    // back. This is the compiler\'s defense against contract upgrades and\\\\n    // pointer aliasing, and it cannot be disabled.\\\\n\\\\n    // The values being non-zero value makes deployment a bit more expensive,\\\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\\\n    // amount. Since refunds are capped to a percentage of the total\\\\n    // transaction\'s gas, it is best to keep them low in cases like this one, to\\\\n    // increase the likelihood of the full refund coming into effect.\\\\n    uint256 private constant _NOT_ENTERED = 1;\\\\n    uint256 private constant _ENTERED = 2;\\\\n\\\\n    uint256 private _status;\\\\n\\\\n    constructor() {\\\\n        _status = _NOT_ENTERED;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\\\n     * function is not supported. It is possible to prevent this from happening\\\\n     * by making the `nonReentrant` function external, and making it call a\\\\n     * `private` function that does the actual work.\\\\n     */\\\\n    modifier nonReentrant() {\\\\n        _nonReentrantBefore();\\\\n        _;\\\\n        _nonReentrantAfter();\\\\n    }\\\\n\\\\n    function _nonReentrantBefore() private {\\\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\\\n        require(_status != _ENTERED, \\\\\\"ReentrancyGuard: reentrant call\\\\\\");\\\\n\\\\n        // Any calls to nonReentrant after this point will fail\\\\n        _status = _ENTERED;\\\\n    }\\\\n\\\\n    function _nonReentrantAfter() private {\\\\n        // By storing the original value once again, a refund is triggered (see\\\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\\\n        _status = _NOT_ENTERED;\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC1155/ERC1155.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\nimport \\\\\\"./IERC1155.sol\\\\\\";\\\\nimport \\\\\\"./IERC1155Receiver.sol\\\\\\";\\\\nimport \\\\\\"./extensions/IERC1155MetadataURI.sol\\\\\\";\\\\nimport \\\\\\"../../utils/Address.sol\\\\\\";\\\\nimport \\\\\\"../../utils/Context.sol\\\\\\";\\\\nimport \\\\\\"../../utils/introspection/ERC165.sol\\\\\\";\\\\n\\\\n/**\\\\n * @dev Implementation of the basic standard multi-token.\\\\n * See https://eips.ethereum.org/EIPS/eip-1155\\\\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\\\\n *\\\\n * _Available since v3.1._\\\\n */\\\\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\\\\n    using Address for address;\\\\n\\\\n    // Mapping from token ID to account balances\\\\n    mapping(uint256 => mapping(address => uint256)) private _balances;\\\\n\\\\n    // Mapping from account to operator approvals\\\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\\\n\\\\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\\\\n    string private _uri;\\\\n\\\\n    /**\\\\n     * @dev See {_setURI}.\\\\n     */\\\\n    constructor(string memory uri_) {\\\\n        _setURI(uri_);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC165-supportsInterface}.\\\\n     */\\\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\\\n        return\\\\n            interfaceId == type(IERC1155).interfaceId ||\\\\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\\\\n            super.supportsInterface(interfaceId);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC1155MetadataURI-uri}.\\\\n     *\\\\n     * This implementation returns the same URI for *all* token types. It relies\\\\n     * on the token type ID substitution mechanism\\\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\\\n     *\\\\n     * Clients calling this function must replace the `\\\\\\\\{id\\\\\\\\}` substring with the\\\\n     * actual token type ID.\\\\n     */\\\\n    function uri(uint256) public view virtual override returns (string memory) {\\\\n        return _uri;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC1155-balanceOf}.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `account` cannot be the zero address.\\\\n     */\\\\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\\\\n        require(account != address(0), \\\\\\"ERC1155: address zero is not a valid owner\\\\\\");\\\\n        return _balances[id][account];\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC1155-balanceOfBatch}.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `accounts` and `ids` must have the same length.\\\\n     */\\\\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\\\\n        public\\\\n        view\\\\n        virtual\\\\n        override\\\\n        returns (uint256[] memory)\\\\n    {\\\\n        require(accounts.length == ids.length, \\\\\\"ERC1155: accounts and ids length mismatch\\\\\\");\\\\n\\\\n        uint256[] memory batchBalances = new uint256[](accounts.length);\\\\n\\\\n        for (uint256 i = 0; i < accounts.length; ++i) {\\\\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\\\\n        }\\\\n\\\\n        return batchBalances;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC1155-setApprovalForAll}.\\\\n     */\\\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\\\n        _setApprovalForAll(_msgSender(), operator, approved);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC1155-isApprovedForAll}.\\\\n     */\\\\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\\\\n        return _operatorApprovals[account][operator];\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC1155-safeTransferFrom}.\\\\n     */\\\\n    function safeTransferFrom(\\\\n        address from,\\\\n        address to,\\\\n        uint256 id,\\\\n        uint256 amount,\\\\n        bytes memory data\\\\n    ) public virtual override {\\\\n        require(\\\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\\\n            \\\\\\"ERC1155: caller is not token owner or approved\\\\\\"\\\\n        );\\\\n        _safeTransferFrom(from, to, id, amount, data);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC1155-safeBatchTransferFrom}.\\\\n     */\\\\n    function safeBatchTransferFrom(\\\\n        address from,\\\\n        address to,\\\\n        uint256[] memory ids,\\\\n        uint256[] memory amounts,\\\\n        bytes memory data\\\\n    ) public virtual override {\\\\n        require(\\\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\\\n            \\\\\\"ERC1155: caller is not token owner or approved\\\\\\"\\\\n        );\\\\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\\\n     *\\\\n     * Emits a {TransferSingle} event.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `to` cannot be the zero address.\\\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\\\n     * acceptance magic value.\\\\n     */\\\\n    function _safeTransferFrom(\\\\n        address from,\\\\n        address to,\\\\n        uint256 id,\\\\n        uint256 amount,\\\\n        bytes memory data\\\\n    ) internal virtual {\\\\n        require(to != address(0), \\\\\\"ERC1155: transfer to the zero address\\\\\\");\\\\n\\\\n        address operator = _msgSender();\\\\n        uint256[] memory ids = _asSingletonArray(id);\\\\n        uint256[] memory amounts = _asSingletonArray(amount);\\\\n\\\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\\\n\\\\n        uint256 fromBalance = _balances[id][from];\\\\n        require(fromBalance >= amount, \\\\\\"ERC1155: insufficient balance for transfer\\\\\\");\\\\n        unchecked {\\\\n            _balances[id][from] = fromBalance - amount;\\\\n        }\\\\n        _balances[id][to] += amount;\\\\n\\\\n        emit TransferSingle(operator, from, to, id, amount);\\\\n\\\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\\\n\\\\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\\\\n     *\\\\n     * Emits a {TransferBatch} event.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\\\n     * acceptance magic value.\\\\n     */\\\\n    function _safeBatchTransferFrom(\\\\n        address from,\\\\n        address to,\\\\n        uint256[] memory ids,\\\\n        uint256[] memory amounts,\\\\n        bytes memory data\\\\n    ) internal virtual {\\\\n        require(ids.length == amounts.length, \\\\\\"ERC1155: ids and amounts length mismatch\\\\\\");\\\\n        require(to != address(0), \\\\\\"ERC1155: transfer to the zero address\\\\\\");\\\\n\\\\n        address operator = _msgSender();\\\\n\\\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\\\n\\\\n        for (uint256 i = 0; i < ids.length; ++i) {\\\\n            uint256 id = ids[i];\\\\n            uint256 amount = amounts[i];\\\\n\\\\n            uint256 fromBalance = _balances[id][from];\\\\n            require(fromBalance >= amount, \\\\\\"ERC1155: insufficient balance for transfer\\\\\\");\\\\n            unchecked {\\\\n                _balances[id][from] = fromBalance - amount;\\\\n            }\\\\n            _balances[id][to] += amount;\\\\n        }\\\\n\\\\n        emit TransferBatch(operator, from, to, ids, amounts);\\\\n\\\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\\\n\\\\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Sets a new URI for all token types, by relying on the token type ID\\\\n     * substitution mechanism\\\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\\\n     *\\\\n     * By this mechanism, any occurrence of the `\\\\\\\\{id\\\\\\\\}` substring in either the\\\\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\\\\n     * clients with the token type ID.\\\\n     *\\\\n     * For example, the `https://token-cdn-domain/\\\\\\\\{id\\\\\\\\}.json` URI would be\\\\n     * interpreted by clients as\\\\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\\\\n     * for token type ID 0x4cce0.\\\\n     *\\\\n     * See {uri}.\\\\n     *\\\\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\\\\n     * this function emits no events.\\\\n     */\\\\n    function _setURI(string memory newuri) internal virtual {\\\\n        _uri = newuri;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\\\\n     *\\\\n     * Emits a {TransferSingle} event.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `to` cannot be the zero address.\\\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\\\n     * acceptance magic value.\\\\n     */\\\\n    function _mint(\\\\n        address to,\\\\n        uint256 id,\\\\n        uint256 amount,\\\\n        bytes memory data\\\\n    ) internal virtual {\\\\n        require(to != address(0), \\\\\\"ERC1155: mint to the zero address\\\\\\");\\\\n\\\\n        address operator = _msgSender();\\\\n        uint256[] memory ids = _asSingletonArray(id);\\\\n        uint256[] memory amounts = _asSingletonArray(amount);\\\\n\\\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\\\n\\\\n        _balances[id][to] += amount;\\\\n        emit TransferSingle(operator, address(0), to, id, amount);\\\\n\\\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\\\n\\\\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\\\\n     *\\\\n     * Emits a {TransferBatch} event.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `ids` and `amounts` must have the same length.\\\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\\\n     * acceptance magic value.\\\\n     */\\\\n    function _mintBatch(\\\\n        address to,\\\\n        uint256[] memory ids,\\\\n        uint256[] memory amounts,\\\\n        bytes memory data\\\\n    ) internal virtual {\\\\n        require(to != address(0), \\\\\\"ERC1155: mint to the zero address\\\\\\");\\\\n        require(ids.length == amounts.length, \\\\\\"ERC1155: ids and amounts length mismatch\\\\\\");\\\\n\\\\n        address operator = _msgSender();\\\\n\\\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\\\n\\\\n        for (uint256 i = 0; i < ids.length; i++) {\\\\n            _balances[ids[i]][to] += amounts[i];\\\\n        }\\\\n\\\\n        emit TransferBatch(operator, address(0), to, ids, amounts);\\\\n\\\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\\\n\\\\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Destroys `amount` tokens of token type `id` from `from`\\\\n     *\\\\n     * Emits a {TransferSingle} event.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `from` cannot be the zero address.\\\\n     * - `from` must have at least `amount` tokens of token type `id`.\\\\n     */\\\\n    function _burn(\\\\n        address from,\\\\n        uint256 id,\\\\n        uint256 amount\\\\n    ) internal virtual {\\\\n        require(from != address(0), \\\\\\"ERC1155: burn from the zero address\\\\\\");\\\\n\\\\n        address operator = _msgSender();\\\\n        uint256[] memory ids = _asSingletonArray(id);\\\\n        uint256[] memory amounts = _asSingletonArray(amount);\\\\n\\\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\\\\"\\\\\\");\\\\n\\\\n        uint256 fromBalance = _balances[id][from];\\\\n        require(fromBalance >= amount, \\\\\\"ERC1155: burn amount exceeds balance\\\\\\");\\\\n        unchecked {\\\\n            _balances[id][from] = fromBalance - amount;\\\\n        }\\\\n\\\\n        emit TransferSingle(operator, from, address(0), id, amount);\\\\n\\\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\\\\"\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\\\\n     *\\\\n     * Emits a {TransferBatch} event.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `ids` and `amounts` must have the same length.\\\\n     */\\\\n    function _burnBatch(\\\\n        address from,\\\\n        uint256[] memory ids,\\\\n        uint256[] memory amounts\\\\n    ) internal virtual {\\\\n        require(from != address(0), \\\\\\"ERC1155: burn from the zero address\\\\\\");\\\\n        require(ids.length == amounts.length, \\\\\\"ERC1155: ids and amounts length mismatch\\\\\\");\\\\n\\\\n        address operator = _msgSender();\\\\n\\\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\\\\"\\\\\\");\\\\n\\\\n        for (uint256 i = 0; i < ids.length; i++) {\\\\n            uint256 id = ids[i];\\\\n            uint256 amount = amounts[i];\\\\n\\\\n            uint256 fromBalance = _balances[id][from];\\\\n            require(fromBalance >= amount, \\\\\\"ERC1155: burn amount exceeds balance\\\\\\");\\\\n            unchecked {\\\\n                _balances[id][from] = fromBalance - amount;\\\\n            }\\\\n        }\\\\n\\\\n        emit TransferBatch(operator, from, address(0), ids, amounts);\\\\n\\\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\\\\"\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\\\n     *\\\\n     * Emits an {ApprovalForAll} event.\\\\n     */\\\\n    function _setApprovalForAll(\\\\n        address owner,\\\\n        address operator,\\\\n        bool approved\\\\n    ) internal virtual {\\\\n        require(owner != operator, \\\\\\"ERC1155: setting approval status for self\\\\\\");\\\\n        _operatorApprovals[owner][operator] = approved;\\\\n        emit ApprovalForAll(owner, operator, approved);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Hook that is called before any token transfer. This includes minting\\\\n     * and burning, as well as batched variants.\\\\n     *\\\\n     * The same hook is called on both single and batched variants. For single\\\\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\\\\n     *\\\\n     * Calling conditions (for each `id` and `amount` pair):\\\\n     *\\\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``\'s tokens\\\\n     * of token type `id` will be  transferred to `to`.\\\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\\\n     * for `to`.\\\\n     * - when `to` is zero, `amount` of ``from``\'s tokens of token type `id`\\\\n     * will be burned.\\\\n     * - `from` and `to` are never both zero.\\\\n     * - `ids` and `amounts` have the same, non-zero length.\\\\n     *\\\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\\\n     */\\\\n    function _beforeTokenTransfer(\\\\n        address operator,\\\\n        address from,\\\\n        address to,\\\\n        uint256[] memory ids,\\\\n        uint256[] memory amounts,\\\\n        bytes memory data\\\\n    ) internal virtual {}\\\\n\\\\n    /**\\\\n     * @dev Hook that is called after any token transfer. This includes minting\\\\n     * and burning, as well as batched variants.\\\\n     *\\\\n     * The same hook is called on both single and batched variants. For single\\\\n     * transfers, the length of the `id` and `amount` arrays will be 1.\\\\n     *\\\\n     * Calling conditions (for each `id` and `amount` pair):\\\\n     *\\\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``\'s tokens\\\\n     * of token type `id` will be  transferred to `to`.\\\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\\\n     * for `to`.\\\\n     * - when `to` is zero, `amount` of ``from``\'s tokens of token type `id`\\\\n     * will be burned.\\\\n     * - `from` and `to` are never both zero.\\\\n     * - `ids` and `amounts` have the same, non-zero length.\\\\n     *\\\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\\\n     */\\\\n    function _afterTokenTransfer(\\\\n        address operator,\\\\n        address from,\\\\n        address to,\\\\n        uint256[] memory ids,\\\\n        uint256[] memory amounts,\\\\n        bytes memory data\\\\n    ) internal virtual {}\\\\n\\\\n    function _doSafeTransferAcceptanceCheck(\\\\n        address operator,\\\\n        address from,\\\\n        address to,\\\\n        uint256 id,\\\\n        uint256 amount,\\\\n        bytes memory data\\\\n    ) private {\\\\n        if (to.isContract()) {\\\\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\\\\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\\\\n                    revert(\\\\\\"ERC1155: ERC1155Receiver rejected tokens\\\\\\");\\\\n                }\\\\n            } catch Error(string memory reason) {\\\\n                revert(reason);\\\\n            } catch {\\\\n                revert(\\\\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\\\\");\\\\n            }\\\\n        }\\\\n    }\\\\n\\\\n    function _doSafeBatchTransferAcceptanceCheck(\\\\n        address operator,\\\\n        address from,\\\\n        address to,\\\\n        uint256[] memory ids,\\\\n        uint256[] memory amounts,\\\\n        bytes memory data\\\\n    ) private {\\\\n        if (to.isContract()) {\\\\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\\\\n                bytes4 response\\\\n            ) {\\\\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\\\\n                    revert(\\\\\\"ERC1155: ERC1155Receiver rejected tokens\\\\\\");\\\\n                }\\\\n            } catch Error(string memory reason) {\\\\n                revert(reason);\\\\n            } catch {\\\\n                revert(\\\\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\\\\");\\\\n            }\\\\n        }\\\\n    }\\\\n\\\\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\\\\n        uint256[] memory array = new uint256[](1);\\\\n        array[0] = element;\\\\n\\\\n        return array;\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0xd917747dc87f189c6779b894f367a028f9dca4be930283cccec8f312966af820\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\nimport \\\\\\"../../utils/introspection/IERC165.sol\\\\\\";\\\\n\\\\n/**\\\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\\\n *\\\\n * _Available since v3.1._\\\\n */\\\\ninterface IERC1155 is IERC165 {\\\\n    /**\\\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\\\n     */\\\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\\\n\\\\n    /**\\\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\\\n     * transfers.\\\\n     */\\\\n    event TransferBatch(\\\\n        address indexed operator,\\\\n        address indexed from,\\\\n        address indexed to,\\\\n        uint256[] ids,\\\\n        uint256[] values\\\\n    );\\\\n\\\\n    /**\\\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\\\n     * `approved`.\\\\n     */\\\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\\\n\\\\n    /**\\\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\\\n     *\\\\n     * If an {URI} event was emitted for `id`, the standard\\\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\\\n     * returned by {IERC1155MetadataURI-uri}.\\\\n     */\\\\n    event URI(string value, uint256 indexed id);\\\\n\\\\n    /**\\\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `account` cannot be the zero address.\\\\n     */\\\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\\\n\\\\n    /**\\\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `accounts` and `ids` must have the same length.\\\\n     */\\\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\\\n        external\\\\n        view\\\\n        returns (uint256[] memory);\\\\n\\\\n    /**\\\\n     * @dev Grants or revokes permission to `operator` to transfer the caller\'s tokens, according to `approved`,\\\\n     *\\\\n     * Emits an {ApprovalForAll} event.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `operator` cannot be the caller.\\\\n     */\\\\n    function setApprovalForAll(address operator, bool approved) external;\\\\n\\\\n    /**\\\\n     * @dev Returns true if `operator` is approved to transfer ``account``\'s tokens.\\\\n     *\\\\n     * See {setApprovalForAll}.\\\\n     */\\\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\\\n\\\\n    /**\\\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\\\n     *\\\\n     * Emits a {TransferSingle} event.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `to` cannot be the zero address.\\\\n     * - If the caller is not `from`, it must have been approved to spend ``from``\'s tokens via {setApprovalForAll}.\\\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\\\n     * acceptance magic value.\\\\n     */\\\\n    function safeTransferFrom(\\\\n        address from,\\\\n        address to,\\\\n        uint256 id,\\\\n        uint256 amount,\\\\n        bytes calldata data\\\\n    ) external;\\\\n\\\\n    /**\\\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\\\n     *\\\\n     * Emits a {TransferBatch} event.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `ids` and `amounts` must have the same length.\\\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\\\n     * acceptance magic value.\\\\n     */\\\\n    function safeBatchTransferFrom(\\\\n        address from,\\\\n        address to,\\\\n        uint256[] calldata ids,\\\\n        uint256[] calldata amounts,\\\\n        bytes calldata data\\\\n    ) external;\\\\n}\\\\n\\",\\"keccak256\\":\\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\nimport \\\\\\"../../utils/introspection/IERC165.sol\\\\\\";\\\\n\\\\n/**\\\\n * @dev _Available since v3.1._\\\\n */\\\\ninterface IERC1155Receiver is IERC165 {\\\\n    /**\\\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\\\n     *\\\\n     * NOTE: To accept the transfer, this must return\\\\n     * `bytes4(keccak256(\\\\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\\\\"))`\\\\n     * (i.e. 0xf23a6e61, or its own function selector).\\\\n     *\\\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\\\n     * @param from The address which previously owned the token\\\\n     * @param id The ID of the token being transferred\\\\n     * @param value The amount of tokens being transferred\\\\n     * @param data Additional data with no specified format\\\\n     * @return `bytes4(keccak256(\\\\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\\\\"))` if transfer is allowed\\\\n     */\\\\n    function onERC1155Received(\\\\n        address operator,\\\\n        address from,\\\\n        uint256 id,\\\\n        uint256 value,\\\\n        bytes calldata data\\\\n    ) external returns (bytes4);\\\\n\\\\n    /**\\\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\\\n     * been updated.\\\\n     *\\\\n     * NOTE: To accept the transfer(s), this must return\\\\n     * `bytes4(keccak256(\\\\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\\\\"))`\\\\n     * (i.e. 0xbc197c81, or its own function selector).\\\\n     *\\\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\\\n     * @param from The address which previously owned the token\\\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\\\n     * @param data Additional data with no specified format\\\\n     * @return `bytes4(keccak256(\\\\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\\\\"))` if transfer is allowed\\\\n     */\\\\n    function onERC1155BatchReceived(\\\\n        address operator,\\\\n        address from,\\\\n        uint256[] calldata ids,\\\\n        uint256[] calldata values,\\\\n        bytes calldata data\\\\n    ) external returns (bytes4);\\\\n}\\\\n\\",\\"keccak256\\":\\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\nimport \\\\\\"../IERC1155.sol\\\\\\";\\\\n\\\\n/**\\\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\\\n *\\\\n * _Available since v3.1._\\\\n */\\\\ninterface IERC1155MetadataURI is IERC1155 {\\\\n    /**\\\\n     * @dev Returns the URI for token type `id`.\\\\n     *\\\\n     * If the `\\\\\\\\{id\\\\\\\\}` substring is present in the URI, it must be replaced by\\\\n     * clients with the actual token type ID.\\\\n     */\\\\n    function uri(uint256 id) external view returns (string memory);\\\\n}\\\\n\\",\\"keccak256\\":\\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/utils/Address.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\\\n\\\\npragma solidity ^0.8.1;\\\\n\\\\n/**\\\\n * @dev Collection of functions related to the address type\\\\n */\\\\nlibrary Address {\\\\n    /**\\\\n     * @dev Returns true if `account` is a contract.\\\\n     *\\\\n     * [IMPORTANT]\\\\n     * ====\\\\n     * It is unsafe to assume that an address for which this function returns\\\\n     * false is an externally-owned account (EOA) and not a contract.\\\\n     *\\\\n     * Among others, `isContract` will return false for the following\\\\n     * types of addresses:\\\\n     *\\\\n     *  - an externally-owned account\\\\n     *  - a contract in construction\\\\n     *  - an address where a contract will be created\\\\n     *  - an address where a contract lived, but was destroyed\\\\n     * ====\\\\n     *\\\\n     * [IMPORTANT]\\\\n     * ====\\\\n     * You shouldn\'t rely on `isContract` to protect against flash loan attacks!\\\\n     *\\\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\\\n     * constructor.\\\\n     * ====\\\\n     */\\\\n    function isContract(address account) internal view returns (bool) {\\\\n        // This method relies on extcodesize/address.code.length, which returns 0\\\\n        // for contracts in construction, since the code is only stored at the end\\\\n        // of the constructor execution.\\\\n\\\\n        return account.code.length > 0;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Replacement for Solidity\'s `transfer`: sends `amount` wei to\\\\n     * `recipient`, forwarding all available gas and reverting on errors.\\\\n     *\\\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\\\n     * imposed by `transfer`, making them unable to receive funds via\\\\n     * `transfer`. {sendValue} removes this limitation.\\\\n     *\\\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\\\n     *\\\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\\\n     * taken to not create reentrancy vulnerabilities. Consider using\\\\n     * {ReentrancyGuard} or the\\\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\\\n     */\\\\n    function sendValue(address payable recipient, uint256 amount) internal {\\\\n        require(address(this).balance >= amount, \\\\\\"Address: insufficient balance\\\\\\");\\\\n\\\\n        (bool success, ) = recipient.call{value: amount}(\\\\\\"\\\\\\");\\\\n        require(success, \\\\\\"Address: unable to send value, recipient may have reverted\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Performs a Solidity function call using a low level `call`. A\\\\n     * plain `call` is an unsafe replacement for a function call: use this\\\\n     * function instead.\\\\n     *\\\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\\\n     * function (like regular Solidity function calls).\\\\n     *\\\\n     * Returns the raw returned data. To convert to the expected return value,\\\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `target` must be a contract.\\\\n     * - calling `target` with `data` must not revert.\\\\n     *\\\\n     * _Available since v3.1._\\\\n     */\\\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\\\n        return functionCallWithValue(target, data, 0, \\\\\\"Address: low-level call failed\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\\\n     *\\\\n     * _Available since v3.1._\\\\n     */\\\\n    function functionCall(\\\\n        address target,\\\\n        bytes memory data,\\\\n        string memory errorMessage\\\\n    ) internal returns (bytes memory) {\\\\n        return functionCallWithValue(target, data, 0, errorMessage);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\\\n     * but also transferring `value` wei to `target`.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - the calling contract must have an ETH balance of at least `value`.\\\\n     * - the called Solidity function must be `payable`.\\\\n     *\\\\n     * _Available since v3.1._\\\\n     */\\\\n    function functionCallWithValue(\\\\n        address target,\\\\n        bytes memory data,\\\\n        uint256 value\\\\n    ) internal returns (bytes memory) {\\\\n        return functionCallWithValue(target, data, value, \\\\\\"Address: low-level call with value failed\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\\\n     *\\\\n     * _Available since v3.1._\\\\n     */\\\\n    function functionCallWithValue(\\\\n        address target,\\\\n        bytes memory data,\\\\n        uint256 value,\\\\n        string memory errorMessage\\\\n    ) internal returns (bytes memory) {\\\\n        require(address(this).balance >= value, \\\\\\"Address: insufficient balance for call\\\\\\");\\\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\\\n     * but performing a static call.\\\\n     *\\\\n     * _Available since v3.3._\\\\n     */\\\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\\\n        return functionStaticCall(target, data, \\\\\\"Address: low-level static call failed\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\\\n     * but performing a static call.\\\\n     *\\\\n     * _Available since v3.3._\\\\n     */\\\\n    function functionStaticCall(\\\\n        address target,\\\\n        bytes memory data,\\\\n        string memory errorMessage\\\\n    ) internal view returns (bytes memory) {\\\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\\\n     * but performing a delegate call.\\\\n     *\\\\n     * _Available since v3.4._\\\\n     */\\\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\\\n        return functionDelegateCall(target, data, \\\\\\"Address: low-level delegate call failed\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\\\n     * but performing a delegate call.\\\\n     *\\\\n     * _Available since v3.4._\\\\n     */\\\\n    function functionDelegateCall(\\\\n        address target,\\\\n        bytes memory data,\\\\n        string memory errorMessage\\\\n    ) internal returns (bytes memory) {\\\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\\\n     *\\\\n     * _Available since v4.8._\\\\n     */\\\\n    function verifyCallResultFromTarget(\\\\n        address target,\\\\n        bool success,\\\\n        bytes memory returndata,\\\\n        string memory errorMessage\\\\n    ) internal view returns (bytes memory) {\\\\n        if (success) {\\\\n            if (returndata.length == 0) {\\\\n                // only check isContract if the call was successful and the return data is empty\\\\n                // otherwise we already know that it was a contract\\\\n                require(isContract(target), \\\\\\"Address: call to non-contract\\\\\\");\\\\n            }\\\\n            return returndata;\\\\n        } else {\\\\n            _revert(returndata, errorMessage);\\\\n        }\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn\'t, either by bubbling the\\\\n     * revert reason or using the provided one.\\\\n     *\\\\n     * _Available since v4.3._\\\\n     */\\\\n    function verifyCallResult(\\\\n        bool success,\\\\n        bytes memory returndata,\\\\n        string memory errorMessage\\\\n    ) internal pure returns (bytes memory) {\\\\n        if (success) {\\\\n            return returndata;\\\\n        } else {\\\\n            _revert(returndata, errorMessage);\\\\n        }\\\\n    }\\\\n\\\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\\\n        // Look for revert reason and bubble it up if present\\\\n        if (returndata.length > 0) {\\\\n            // The easiest way to bubble the revert reason is using memory via assembly\\\\n            /// @solidity memory-safe-assembly\\\\n            assembly {\\\\n                let returndata_size := mload(returndata)\\\\n                revert(add(32, returndata), returndata_size)\\\\n            }\\\\n        } else {\\\\n            revert(errorMessage);\\\\n        }\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/utils/Context.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\n/**\\\\n * @dev Provides information about the current execution context, including the\\\\n * sender of the transaction and its data. While these are generally available\\\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\\\n * manner, since when dealing with meta-transactions the account sending and\\\\n * paying for execution may not be the actual sender (as far as an application\\\\n * is concerned).\\\\n *\\\\n * This contract is only required for intermediate, library-like contracts.\\\\n */\\\\nabstract contract Context {\\\\n    function _msgSender() internal view virtual returns (address) {\\\\n        return msg.sender;\\\\n    }\\\\n\\\\n    function _msgData() internal view virtual returns (bytes calldata) {\\\\n        return msg.data;\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/utils/introspection/ERC165.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\nimport \\\\\\"./IERC165.sol\\\\\\";\\\\n\\\\n/**\\\\n * @dev Implementation of the {IERC165} interface.\\\\n *\\\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\\\n * for the additional interface id that will be supported. For example:\\\\n *\\\\n * ```solidity\\\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\\\n * }\\\\n * ```\\\\n *\\\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\\\n */\\\\nabstract contract ERC165 is IERC165 {\\\\n    /**\\\\n     * @dev See {IERC165-supportsInterface}.\\\\n     */\\\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\\\n        return interfaceId == type(IERC165).interfaceId;\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\n/**\\\\n * @dev Interface of the ERC165 standard, as defined in the\\\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\\\n *\\\\n * Implementers can declare support of contract interfaces, which can then be\\\\n * queried by others ({ERC165Checker}).\\\\n *\\\\n * For an implementation, see {ERC165}.\\\\n */\\\\ninterface IERC165 {\\\\n    /**\\\\n     * @dev Returns true if this contract implements the interface defined by\\\\n     * `interfaceId`. See the corresponding\\\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\\\n     * to learn more about how these ids are created.\\\\n     *\\\\n     * This function call must use less than 30 000 gas.\\\\n     */\\\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\\\n}\\\\n\\",\\"keccak256\\":\\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\\",\\"license\\":\\"MIT\\"},\\"contracts/Access.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\npragma solidity ^0.8.9;\\\\n\\\\nimport \\\\\\"@openzeppelin/contracts/access/Ownable.sol\\\\\\";\\\\nimport \\\\\\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\\\\\\";\\\\nimport \\\\\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\\\\";\\\\n\\\\ncontract Access is ERC1155, Ownable, ReentrancyGuard{\\\\n    mapping(uint256 => string) public tokenURIs;\\\\n    mapping(uint256 => uint256) public tokenPrices;\\\\n    mapping(uint256 => bool) public mintingActive;\\\\n    mapping(uint256 => uint256) public maxSupply;\\\\n    mapping(uint256 => uint256) public totalSupply;\\\\n    // store mapping of addresses who create new tokens (ie app developers) \\\\n    // this can control who can upgrade token info (e.g. price)\\\\n    // and where funds are distributed\\\\n    mapping(uint256 => address) public creatorAddresses; \\\\n\\\\n    uint256 public nextTokenId = 0;\\\\n\\\\n    string public name;\\\\n    string public symbol;\\\\n\\\\n    event TokenCreated(uint256 tokenId);\\\\n\\\\n     constructor(\\\\n        string memory _name,\\\\n        string memory _symbol\\\\n    ) ERC1155(\\\\\\"\\\\\\") {\\\\n        name = _name;\\\\n        symbol = _symbol;\\\\n    }\\\\n\\\\n    /** @dev Mint a particular tokenId \\\\n     */\\\\n    function mint(uint256 tokenId)\\\\n        public\\\\n        payable\\\\n        nonReentrant\\\\n    {\\\\n        // needs metadata, a price, and active minting\\\\n        require(bytes(tokenURIs[tokenId]).length > 0, \\\\\\"URI not set\\\\\\");\\\\n        require(mintingActive[tokenId], \\\\\\"Minting not active\\\\\\");\\\\n\\\\n        // check the balance (wallets can only use one nft - prevent double minting)\\\\n        require(balanceOf(msg.sender, tokenId) == 0, \\\\\\"Already minted\\\\\\");\\\\n\\\\n        // check that a payee address is set\\\\n        require(creatorAddresses[tokenId] != address(0), \\\\\\"Payee address not set\\\\\\");\\\\n\\\\n        // check max supply (if set)\\\\n        if (maxSupply[tokenId] > 0) {\\\\n            require(totalSupply[tokenId] < maxSupply[tokenId], \\\\\\"Max supply reached\\\\\\");\\\\n        }\\\\n\\\\n        // check price\\\\n        require(msg.value == tokenPrices[tokenId], \\\\\\"Incorrect value\\\\\\");\\\\n\\\\n        // distribute funds - TODO set this as a percentage\\\\n        (bool success, ) = payable(creatorAddresses[tokenId]).call{value: msg.value}(\\\\\\"\\\\\\");\\\\n\\\\n        // mint\\\\n        totalSupply[tokenId] += 1;\\\\n        _mint(msg.sender, tokenId, 1, \\\\\\"\\\\\\");\\\\n    }\\\\n\\\\n    function createToken(uint256 price, string memory _uri, uint256 supply) public {\\\\n        // TODO do we charge developers a fee to create an access token?\\\\n        uint256 tokenId = nextTokenId;\\\\n        tokenPrices[nextTokenId] = price; // set the price\\\\n        tokenURIs[nextTokenId] = _uri; // set the uri (metadata)\\\\n        maxSupply[nextTokenId] = supply; // set the max supply\\\\n        creatorAddresses[nextTokenId] = msg.sender; // set the payee address\\\\n        mintingActive[nextTokenId] = true; // turn minting on\\\\n        nextTokenId += 1; // increment the token id\\\\n        // emit the tokenId as a log\\\\n        emit TokenCreated(tokenId);\\\\n    }\\\\n\\\\n    /** @dev Return the URI for a token\\\\n     */\\\\n    function uri(uint256 tokenId)\\\\n        public\\\\n        view\\\\n        virtual\\\\n        override\\\\n        returns (string memory)\\\\n    {\\\\n        return tokenURIs[tokenId];\\\\n    }\\\\n\\\\n    /** @dev Set a price for a token\\\\n     */\\\\n    function setTokenPrice(uint256 tokenId, uint256 price) public {\\\\n        // require that the caller is the creator of the token\\\\n        require(creatorAddresses[tokenId] == msg.sender, \\\\\\"Only creator can set price\\\\\\");\\\\n        tokenPrices[tokenId] = price;\\\\n    }\\\\n\\\\n    /** @dev Set the metadata for a token\\\\n     * @param tokenId The token ID\\\\n     * @param _uri The metadata uri (e.g. ipfs://...)\\\\n     */\\\\n    function setTokenURI(uint256 tokenId, string memory _uri) public {\\\\n        // require that the caller is the creator of the token\\\\n        require(creatorAddresses[tokenId] == msg.sender, \\\\\\"Only creator can set URI\\\\\\");\\\\n        tokenURIs[tokenId] = _uri;\\\\n    }\\\\n\\\\n    /** @dev Set the minting active flag\\\\n     */\\\\n    function toggleMintingActive(uint256 tokenId) public onlyOwner {\\\\n        // require that the caller is the creator of the token\\\\n        require(creatorAddresses[tokenId] == msg.sender, \\\\\\"Only creator can toggle minting\\\\\\");\\\\n        mintingActive[tokenId] = !mintingActive[tokenId];\\\\n    }\\\\n\\\\n    /** @dev Set token\'s max supply */\\\\n    function setMaxSupply(uint256 tokenId, uint256 supply) public onlyOwner {\\\\n        // require that the caller is the creator of the token\\\\n        require(creatorAddresses[tokenId] == msg.sender, \\\\\\"Only creator can set max supply\\\\\\");\\\\n        maxSupply[tokenId] = supply;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Withdraw ether to owner\'s wallet\\\\n     */\\\\n    function withdrawETH() public onlyOwner {\\\\n        uint256 balance = address(this).balance;\\\\n        (bool success, ) = payable(msg.sender).call{value: balance}(\\\\\\"\\\\\\");\\\\n        require(success, \\\\\\"Withdraw failed\\\\\\");\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0x3ed7a09a95d5b1158f61a0de76a9e7c4fb7e4cbb8a82ea6da01348348ea21456\\",\\"license\\":\\"MIT\\"}},\\"version\\":1}","bytecode":"0x60806040526000600b553480156200001657600080fd5b50604051620025d0380380620025d0833981016040819052620000399162000276565b604080516020810190915260008152620000538162000098565b506200005f33620000b1565b600160045581516200007990600c90602085019062000103565b5080516200008f90600d90602084019062000103565b5050506200031d565b8051620000ad90600290602084019062000103565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200011190620002e0565b90600052602060002090601f01602090048101928262000135576000855562000180565b82601f106200015057805160ff191683800117855562000180565b8280016001018555821562000180579182015b828111156200018057825182559160200191906001019062000163565b506200018e92915062000192565b5090565b5b808211156200018e576000815560010162000193565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001d157600080fd5b81516001600160401b0380821115620001ee57620001ee620001a9565b604051601f8301601f19908116603f01168101908282118183101715620002195762000219620001a9565b816040528381526020925086838588010111156200023657600080fd5b600091505b838210156200025a57858201830151818301840152908201906200023b565b838211156200026c5760008385830101525b9695505050505050565b600080604083850312156200028a57600080fd5b82516001600160401b0380821115620002a257600080fd5b620002b086838701620001bf565b93506020850151915080821115620002c757600080fd5b50620002d685828601620001bf565b9150509250929050565b600181811c90821680620002f557607f821691505b602082108114156200031757634e487b7160e01b600052602260045260246000fd5b50919050565b6122a3806200032d6000396000f3fe60806040526004361061019b5760003560e01c80638b606335116100ec578063e086e5ec1161008a578063e985e9c511610064578063e985e9c5146104df578063eb685c4714610528578063f242432a14610548578063f2fde38b1461056857600080fd5b8063e086e5ec1461047d578063e5afe3e614610492578063e8bfc93f146104bf57600080fd5b8063a0712d68116100c6578063a0712d68146103fd578063a22cb46514610410578063a230667b14610430578063bd85b0391461045057600080fd5b80638b6063351461039a5780638da5cb5b146103ca57806395d89b41146103e857600080fd5b806337da577c11610159578063715018a611610133578063715018a6146102f457806375794a3c146103095780637c0cc8b31461031f578063869f75941461036d57600080fd5b806337da577c146102875780634e1273f4146102a75780636c8b703f146102d457600080fd5b8062fdd58e146101a057806301ffc9a7146101d357806306fdde03146102035780630e89341c14610225578063162094c4146102455780632eb2c2d614610267575b600080fd5b3480156101ac57600080fd5b506101c06101bb366004611990565b610588565b6040519081526020015b60405180910390f35b3480156101df57600080fd5b506101f36101ee3660046119d0565b61061e565b60405190151581526020016101ca565b34801561020f57600080fd5b50610218610670565b6040516101ca9190611a41565b34801561023157600080fd5b50610218610240366004611a54565b6106fe565b34801561025157600080fd5b50610265610260366004611b24565b6107a0565b005b34801561027357600080fd5b50610265610282366004611c00565b61082a565b34801561029357600080fd5b506102656102a2366004611caa565b610876565b3480156102b357600080fd5b506102c76102c2366004611ccc565b6108f6565b6040516101ca9190611dc8565b3480156102e057600080fd5b506102186102ef366004611a54565b610a20565b34801561030057600080fd5b50610265610a39565b34801561031557600080fd5b506101c0600b5481565b34801561032b57600080fd5b5061035561033a366004611a54565b600a602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101ca565b34801561037957600080fd5b506101c0610388366004611a54565b60086020526000908152604090205481565b3480156103a657600080fd5b506101f36103b5366004611a54565b60076020526000908152604090205460ff1681565b3480156103d657600080fd5b506003546001600160a01b0316610355565b3480156103f457600080fd5b50610218610a4d565b61026561040b366004611a54565b610a5a565b34801561041c57600080fd5b5061026561042b366004611ddb565b610d25565b34801561043c57600080fd5b5061026561044b366004611a54565b610d34565b34801561045c57600080fd5b506101c061046b366004611a54565b60096020526000908152604090205481565b34801561048957600080fd5b50610265610dc2565b34801561049e57600080fd5b506101c06104ad366004611a54565b60066020526000908152604090205481565b3480156104cb57600080fd5b506102656104da366004611e17565b610e56565b3480156104eb57600080fd5b506101f36104fa366004611e67565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b34801561053457600080fd5b50610265610543366004611caa565b610f26565b34801561055457600080fd5b50610265610563366004611e9a565b610f9e565b34801561057457600080fd5b50610265610583366004611eff565b610fe3565b60006001600160a01b0383166105f85760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061064f57506001600160e01b031982166303a24d0760e21b145b8061066a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b600c805461067d90611f1a565b80601f01602080910402602001604051908101604052809291908181526020018280546106a990611f1a565b80156106f65780601f106106cb576101008083540402835291602001916106f6565b820191906000526020600020905b8154815290600101906020018083116106d957829003601f168201915b505050505081565b600081815260056020526040902080546060919061071b90611f1a565b80601f016020809104026020016040519081016040528092919081815260200182805461074790611f1a565b80156107945780601f1061076957610100808354040283529160200191610794565b820191906000526020600020905b81548152906001019060200180831161077757829003601f168201915b50505050509050919050565b6000828152600a60205260409020546001600160a01b031633146108065760405162461bcd60e51b815260206004820152601860248201527f4f6e6c792063726561746f722063616e2073657420555249000000000000000060448201526064016105ef565b60008281526005602090815260409091208251610825928401906118db565b505050565b6001600160a01b038516331480610846575061084685336104fa565b6108625760405162461bcd60e51b81526004016105ef90611f55565b61086f8585858585611059565b5050505050565b61087e611236565b6000828152600a60205260409020546001600160a01b031633146108e45760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c792063726561746f722063616e20736574206d617820737570706c790060448201526064016105ef565b60009182526008602052604090912055565b6060815183511461095b5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016105ef565b6000835167ffffffffffffffff81111561097757610977611a6d565b6040519080825280602002602001820160405280156109a0578160200160208202803683370190505b50905060005b8451811015610a18576109eb8582815181106109c4576109c4611fa3565b60200260200101518583815181106109de576109de611fa3565b6020026020010151610588565b8282815181106109fd576109fd611fa3565b6020908102919091010152610a1181611fcf565b90506109a6565b509392505050565b6005602052600090815260409020805461067d90611f1a565b610a41611236565b610a4b6000611290565b565b600d805461067d90611f1a565b610a626112e2565b60008181526005602052604081208054610a7b90611f1a565b905011610ab85760405162461bcd60e51b815260206004820152600b60248201526a155492481b9bdd081cd95d60aa1b60448201526064016105ef565b60008181526007602052604090205460ff16610b0b5760405162461bcd60e51b81526020600482015260126024820152714d696e74696e67206e6f742061637469766560701b60448201526064016105ef565b610b153382610588565b15610b535760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e481b5a5b9d195960921b60448201526064016105ef565b6000818152600a60205260409020546001600160a01b0316610baf5760405162461bcd60e51b815260206004820152601560248201527414185e5959481859191c995cdcc81b9bdd081cd95d605a1b60448201526064016105ef565b60008181526008602052604090205415610c205760008181526008602090815260408083205460099092529091205410610c205760405162461bcd60e51b815260206004820152601260248201527113585e081cdd5c1c1b1e481c995858da195960721b60448201526064016105ef565b6000818152600660205260409020543414610c6f5760405162461bcd60e51b815260206004820152600f60248201526e496e636f72726563742076616c756560881b60448201526064016105ef565b6000818152600a60205260408082205490516001600160a01b039091169034908381818185875af1925050503d8060008114610cc7576040519150601f19603f3d011682016040523d82523d6000602084013e610ccc565b606091505b505090506001600960008481526020019081526020016000206000828254610cf49190611fea565b92505081905550610d17338360016040518060200160405280600081525061133c565b50610d226001600455565b50565b610d30338383611450565b5050565b610d3c611236565b6000818152600a60205260409020546001600160a01b03163314610da25760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c792063726561746f722063616e20746f67676c65206d696e74696e670060448201526064016105ef565b6000908152600760205260409020805460ff19811660ff90911615179055565b610dca611236565b6040514790600090339083908381818185875af1925050503d8060008114610e0e576040519150601f19603f3d011682016040523d82523d6000602084013e610e13565b606091505b5050905080610d305760405162461bcd60e51b815260206004820152600f60248201526e15da5d1a191c985dc819985a5b1959608a1b60448201526064016105ef565b600b80546000818152600660209081526040808320889055935482526005815292902084519192610e8a92908601906118db565b50600b8054600090815260086020908152604080832086905583548352600a825280832080546001600160a01b031916331790558354835260079091528120805460ff19166001908117909155825490929190610ee8908490611fea565b90915550506040518181527f5871761b381266e7e47309f0821d5b396364ebb6371d878871cac5393cb93ea89060200160405180910390a150505050565b6000828152600a60205260409020546001600160a01b03163314610f8c5760405162461bcd60e51b815260206004820152601a60248201527f4f6e6c792063726561746f722063616e2073657420707269636500000000000060448201526064016105ef565b60009182526006602052604090912055565b6001600160a01b038516331480610fba5750610fba85336104fa565b610fd65760405162461bcd60e51b81526004016105ef90611f55565b61086f8585858585611531565b610feb611236565b6001600160a01b0381166110505760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105ef565b610d2281611290565b81518351146110bb5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016105ef565b6001600160a01b0384166110e15760405162461bcd60e51b81526004016105ef90612002565b3360005b84518110156111c857600085828151811061110257611102611fa3565b60200260200101519050600085838151811061112057611120611fa3565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156111705760405162461bcd60e51b81526004016105ef90612047565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906111ad908490611fea565b92505081905550505050806111c190611fcf565b90506110e5565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611218929190612091565b60405180910390a461122e81878787878761165b565b505050505050565b6003546001600160a01b03163314610a4b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105ef565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600260045414156113355760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105ef565b6002600455565b6001600160a01b03841661139c5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016105ef565b3360006113a8856117c6565b905060006113b5856117c6565b90506000868152602081815260408083206001600160a01b038b168452909152812080548792906113e7908490611fea565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461144783600089898989611811565b50505050505050565b816001600160a01b0316836001600160a01b031614156114c45760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016105ef565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166115575760405162461bcd60e51b81526004016105ef90612002565b336000611563856117c6565b90506000611570856117c6565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156115b35760405162461bcd60e51b81526004016105ef90612047565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906115f0908490611fea565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611650848a8a8a8a8a611811565b505050505050505050565b6001600160a01b0384163b1561122e5760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061169f90899089908890889088906004016120bf565b602060405180830381600087803b1580156116b957600080fd5b505af19250505080156116e9575060408051601f3d908101601f191682019092526116e69181019061211d565b60015b611796576116f561213a565b806308c379a0141561172f575061170a612156565b806117155750611731565b8060405162461bcd60e51b81526004016105ef9190611a41565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016105ef565b6001600160e01b0319811663bc197c8160e01b146114475760405162461bcd60e51b81526004016105ef906121e0565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061180057611800611fa3565b602090810291909101015292915050565b6001600160a01b0384163b1561122e5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906118559089908990889088908890600401612228565b602060405180830381600087803b15801561186f57600080fd5b505af192505050801561189f575060408051601f3d908101601f1916820190925261189c9181019061211d565b60015b6118ab576116f561213a565b6001600160e01b0319811663f23a6e6160e01b146114475760405162461bcd60e51b81526004016105ef906121e0565b8280546118e790611f1a565b90600052602060002090601f016020900481019282611909576000855561194f565b82601f1061192257805160ff191683800117855561194f565b8280016001018555821561194f579182015b8281111561194f578251825591602001919060010190611934565b5061195b92915061195f565b5090565b5b8082111561195b5760008155600101611960565b80356001600160a01b038116811461198b57600080fd5b919050565b600080604083850312156119a357600080fd5b6119ac83611974565b946020939093013593505050565b6001600160e01b031981168114610d2257600080fd5b6000602082840312156119e257600080fd5b81356119ed816119ba565b9392505050565b6000815180845260005b81811015611a1a576020818501810151868301820152016119fe565b81811115611a2c576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006119ed60208301846119f4565b600060208284031215611a6657600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611aa957611aa9611a6d565b6040525050565b600082601f830112611ac157600080fd5b813567ffffffffffffffff811115611adb57611adb611a6d565b604051611af2601f8301601f191660200182611a83565b818152846020838601011115611b0757600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215611b3757600080fd5b82359150602083013567ffffffffffffffff811115611b5557600080fd5b611b6185828601611ab0565b9150509250929050565b600067ffffffffffffffff821115611b8557611b85611a6d565b5060051b60200190565b600082601f830112611ba057600080fd5b81356020611bad82611b6b565b604051611bba8282611a83565b83815260059390931b8501820192828101915086841115611bda57600080fd5b8286015b84811015611bf55780358352918301918301611bde565b509695505050505050565b600080600080600060a08688031215611c1857600080fd5b611c2186611974565b9450611c2f60208701611974565b9350604086013567ffffffffffffffff80821115611c4c57600080fd5b611c5889838a01611b8f565b94506060880135915080821115611c6e57600080fd5b611c7a89838a01611b8f565b93506080880135915080821115611c9057600080fd5b50611c9d88828901611ab0565b9150509295509295909350565b60008060408385031215611cbd57600080fd5b50508035926020909101359150565b60008060408385031215611cdf57600080fd5b823567ffffffffffffffff80821115611cf757600080fd5b818501915085601f830112611d0b57600080fd5b81356020611d1882611b6b565b604051611d258282611a83565b83815260059390931b8501820192828101915089841115611d4557600080fd5b948201945b83861015611d6a57611d5b86611974565b82529482019490820190611d4a565b96505086013592505080821115611d8057600080fd5b50611b6185828601611b8f565b600081518084526020808501945080840160005b83811015611dbd57815187529582019590820190600101611da1565b509495945050505050565b6020815260006119ed6020830184611d8d565b60008060408385031215611dee57600080fd5b611df783611974565b915060208301358015158114611e0c57600080fd5b809150509250929050565b600080600060608486031215611e2c57600080fd5b83359250602084013567ffffffffffffffff811115611e4a57600080fd5b611e5686828701611ab0565b925050604084013590509250925092565b60008060408385031215611e7a57600080fd5b611e8383611974565b9150611e9160208401611974565b90509250929050565b600080600080600060a08688031215611eb257600080fd5b611ebb86611974565b9450611ec960208701611974565b93506040860135925060608601359150608086013567ffffffffffffffff811115611ef357600080fd5b611c9d88828901611ab0565b600060208284031215611f1157600080fd5b6119ed82611974565b600181811c90821680611f2e57607f821691505b60208210811415611f4f57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611fe357611fe3611fb9565b5060010190565b60008219821115611ffd57611ffd611fb9565b500190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6040815260006120a46040830185611d8d565b82810360208401526120b68185611d8d565b95945050505050565b6001600160a01b0386811682528516602082015260a0604082018190526000906120eb90830186611d8d565b82810360608401526120fd8186611d8d565b9050828103608084015261211181856119f4565b98975050505050505050565b60006020828403121561212f57600080fd5b81516119ed816119ba565b600060033d11156121535760046000803e5060005160e01c5b90565b600060443d10156121645790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561219457505050505090565b82850191508151818111156121ac5750505050505090565b843d87010160208285010111156121c65750505050505090565b6121d560208286010187611a83565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090612262908301846119f4565b97965050505050505056fea2646970667358221220fd3c1c0f79ce525d8c4e0ef2f67b60edafc3472de1586f0aed34f9be061cd5c864736f6c63430008090033","deployedBytecode":"0x60806040526004361061019b5760003560e01c80638b606335116100ec578063e086e5ec1161008a578063e985e9c511610064578063e985e9c5146104df578063eb685c4714610528578063f242432a14610548578063f2fde38b1461056857600080fd5b8063e086e5ec1461047d578063e5afe3e614610492578063e8bfc93f146104bf57600080fd5b8063a0712d68116100c6578063a0712d68146103fd578063a22cb46514610410578063a230667b14610430578063bd85b0391461045057600080fd5b80638b6063351461039a5780638da5cb5b146103ca57806395d89b41146103e857600080fd5b806337da577c11610159578063715018a611610133578063715018a6146102f457806375794a3c146103095780637c0cc8b31461031f578063869f75941461036d57600080fd5b806337da577c146102875780634e1273f4146102a75780636c8b703f146102d457600080fd5b8062fdd58e146101a057806301ffc9a7146101d357806306fdde03146102035780630e89341c14610225578063162094c4146102455780632eb2c2d614610267575b600080fd5b3480156101ac57600080fd5b506101c06101bb366004611990565b610588565b6040519081526020015b60405180910390f35b3480156101df57600080fd5b506101f36101ee3660046119d0565b61061e565b60405190151581526020016101ca565b34801561020f57600080fd5b50610218610670565b6040516101ca9190611a41565b34801561023157600080fd5b50610218610240366004611a54565b6106fe565b34801561025157600080fd5b50610265610260366004611b24565b6107a0565b005b34801561027357600080fd5b50610265610282366004611c00565b61082a565b34801561029357600080fd5b506102656102a2366004611caa565b610876565b3480156102b357600080fd5b506102c76102c2366004611ccc565b6108f6565b6040516101ca9190611dc8565b3480156102e057600080fd5b506102186102ef366004611a54565b610a20565b34801561030057600080fd5b50610265610a39565b34801561031557600080fd5b506101c0600b5481565b34801561032b57600080fd5b5061035561033a366004611a54565b600a602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101ca565b34801561037957600080fd5b506101c0610388366004611a54565b60086020526000908152604090205481565b3480156103a657600080fd5b506101f36103b5366004611a54565b60076020526000908152604090205460ff1681565b3480156103d657600080fd5b506003546001600160a01b0316610355565b3480156103f457600080fd5b50610218610a4d565b61026561040b366004611a54565b610a5a565b34801561041c57600080fd5b5061026561042b366004611ddb565b610d25565b34801561043c57600080fd5b5061026561044b366004611a54565b610d34565b34801561045c57600080fd5b506101c061046b366004611a54565b60096020526000908152604090205481565b34801561048957600080fd5b50610265610dc2565b34801561049e57600080fd5b506101c06104ad366004611a54565b60066020526000908152604090205481565b3480156104cb57600080fd5b506102656104da366004611e17565b610e56565b3480156104eb57600080fd5b506101f36104fa366004611e67565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b34801561053457600080fd5b50610265610543366004611caa565b610f26565b34801561055457600080fd5b50610265610563366004611e9a565b610f9e565b34801561057457600080fd5b50610265610583366004611eff565b610fe3565b60006001600160a01b0383166105f85760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061064f57506001600160e01b031982166303a24d0760e21b145b8061066a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b600c805461067d90611f1a565b80601f01602080910402602001604051908101604052809291908181526020018280546106a990611f1a565b80156106f65780601f106106cb576101008083540402835291602001916106f6565b820191906000526020600020905b8154815290600101906020018083116106d957829003601f168201915b505050505081565b600081815260056020526040902080546060919061071b90611f1a565b80601f016020809104026020016040519081016040528092919081815260200182805461074790611f1a565b80156107945780601f1061076957610100808354040283529160200191610794565b820191906000526020600020905b81548152906001019060200180831161077757829003601f168201915b50505050509050919050565b6000828152600a60205260409020546001600160a01b031633146108065760405162461bcd60e51b815260206004820152601860248201527f4f6e6c792063726561746f722063616e2073657420555249000000000000000060448201526064016105ef565b60008281526005602090815260409091208251610825928401906118db565b505050565b6001600160a01b038516331480610846575061084685336104fa565b6108625760405162461bcd60e51b81526004016105ef90611f55565b61086f8585858585611059565b5050505050565b61087e611236565b6000828152600a60205260409020546001600160a01b031633146108e45760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c792063726561746f722063616e20736574206d617820737570706c790060448201526064016105ef565b60009182526008602052604090912055565b6060815183511461095b5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016105ef565b6000835167ffffffffffffffff81111561097757610977611a6d565b6040519080825280602002602001820160405280156109a0578160200160208202803683370190505b50905060005b8451811015610a18576109eb8582815181106109c4576109c4611fa3565b60200260200101518583815181106109de576109de611fa3565b6020026020010151610588565b8282815181106109fd576109fd611fa3565b6020908102919091010152610a1181611fcf565b90506109a6565b509392505050565b6005602052600090815260409020805461067d90611f1a565b610a41611236565b610a4b6000611290565b565b600d805461067d90611f1a565b610a626112e2565b60008181526005602052604081208054610a7b90611f1a565b905011610ab85760405162461bcd60e51b815260206004820152600b60248201526a155492481b9bdd081cd95d60aa1b60448201526064016105ef565b60008181526007602052604090205460ff16610b0b5760405162461bcd60e51b81526020600482015260126024820152714d696e74696e67206e6f742061637469766560701b60448201526064016105ef565b610b153382610588565b15610b535760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e481b5a5b9d195960921b60448201526064016105ef565b6000818152600a60205260409020546001600160a01b0316610baf5760405162461bcd60e51b815260206004820152601560248201527414185e5959481859191c995cdcc81b9bdd081cd95d605a1b60448201526064016105ef565b60008181526008602052604090205415610c205760008181526008602090815260408083205460099092529091205410610c205760405162461bcd60e51b815260206004820152601260248201527113585e081cdd5c1c1b1e481c995858da195960721b60448201526064016105ef565b6000818152600660205260409020543414610c6f5760405162461bcd60e51b815260206004820152600f60248201526e496e636f72726563742076616c756560881b60448201526064016105ef565b6000818152600a60205260408082205490516001600160a01b039091169034908381818185875af1925050503d8060008114610cc7576040519150601f19603f3d011682016040523d82523d6000602084013e610ccc565b606091505b505090506001600960008481526020019081526020016000206000828254610cf49190611fea565b92505081905550610d17338360016040518060200160405280600081525061133c565b50610d226001600455565b50565b610d30338383611450565b5050565b610d3c611236565b6000818152600a60205260409020546001600160a01b03163314610da25760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c792063726561746f722063616e20746f67676c65206d696e74696e670060448201526064016105ef565b6000908152600760205260409020805460ff19811660ff90911615179055565b610dca611236565b6040514790600090339083908381818185875af1925050503d8060008114610e0e576040519150601f19603f3d011682016040523d82523d6000602084013e610e13565b606091505b5050905080610d305760405162461bcd60e51b815260206004820152600f60248201526e15da5d1a191c985dc819985a5b1959608a1b60448201526064016105ef565b600b80546000818152600660209081526040808320889055935482526005815292902084519192610e8a92908601906118db565b50600b8054600090815260086020908152604080832086905583548352600a825280832080546001600160a01b031916331790558354835260079091528120805460ff19166001908117909155825490929190610ee8908490611fea565b90915550506040518181527f5871761b381266e7e47309f0821d5b396364ebb6371d878871cac5393cb93ea89060200160405180910390a150505050565b6000828152600a60205260409020546001600160a01b03163314610f8c5760405162461bcd60e51b815260206004820152601a60248201527f4f6e6c792063726561746f722063616e2073657420707269636500000000000060448201526064016105ef565b60009182526006602052604090912055565b6001600160a01b038516331480610fba5750610fba85336104fa565b610fd65760405162461bcd60e51b81526004016105ef90611f55565b61086f8585858585611531565b610feb611236565b6001600160a01b0381166110505760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105ef565b610d2281611290565b81518351146110bb5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016105ef565b6001600160a01b0384166110e15760405162461bcd60e51b81526004016105ef90612002565b3360005b84518110156111c857600085828151811061110257611102611fa3565b60200260200101519050600085838151811061112057611120611fa3565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156111705760405162461bcd60e51b81526004016105ef90612047565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906111ad908490611fea565b92505081905550505050806111c190611fcf565b90506110e5565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611218929190612091565b60405180910390a461122e81878787878761165b565b505050505050565b6003546001600160a01b03163314610a4b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105ef565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600260045414156113355760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105ef565b6002600455565b6001600160a01b03841661139c5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016105ef565b3360006113a8856117c6565b905060006113b5856117c6565b90506000868152602081815260408083206001600160a01b038b168452909152812080548792906113e7908490611fea565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461144783600089898989611811565b50505050505050565b816001600160a01b0316836001600160a01b031614156114c45760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016105ef565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166115575760405162461bcd60e51b81526004016105ef90612002565b336000611563856117c6565b90506000611570856117c6565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156115b35760405162461bcd60e51b81526004016105ef90612047565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906115f0908490611fea565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611650848a8a8a8a8a611811565b505050505050505050565b6001600160a01b0384163b1561122e5760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061169f90899089908890889088906004016120bf565b602060405180830381600087803b1580156116b957600080fd5b505af19250505080156116e9575060408051601f3d908101601f191682019092526116e69181019061211d565b60015b611796576116f561213a565b806308c379a0141561172f575061170a612156565b806117155750611731565b8060405162461bcd60e51b81526004016105ef9190611a41565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016105ef565b6001600160e01b0319811663bc197c8160e01b146114475760405162461bcd60e51b81526004016105ef906121e0565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061180057611800611fa3565b602090810291909101015292915050565b6001600160a01b0384163b1561122e5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906118559089908990889088908890600401612228565b602060405180830381600087803b15801561186f57600080fd5b505af192505050801561189f575060408051601f3d908101601f1916820190925261189c9181019061211d565b60015b6118ab576116f561213a565b6001600160e01b0319811663f23a6e6160e01b146114475760405162461bcd60e51b81526004016105ef906121e0565b8280546118e790611f1a565b90600052602060002090601f016020900481019282611909576000855561194f565b82601f1061192257805160ff191683800117855561194f565b8280016001018555821561194f579182015b8281111561194f578251825591602001919060010190611934565b5061195b92915061195f565b5090565b5b8082111561195b5760008155600101611960565b80356001600160a01b038116811461198b57600080fd5b919050565b600080604083850312156119a357600080fd5b6119ac83611974565b946020939093013593505050565b6001600160e01b031981168114610d2257600080fd5b6000602082840312156119e257600080fd5b81356119ed816119ba565b9392505050565b6000815180845260005b81811015611a1a576020818501810151868301820152016119fe565b81811115611a2c576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006119ed60208301846119f4565b600060208284031215611a6657600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611aa957611aa9611a6d565b6040525050565b600082601f830112611ac157600080fd5b813567ffffffffffffffff811115611adb57611adb611a6d565b604051611af2601f8301601f191660200182611a83565b818152846020838601011115611b0757600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215611b3757600080fd5b82359150602083013567ffffffffffffffff811115611b5557600080fd5b611b6185828601611ab0565b9150509250929050565b600067ffffffffffffffff821115611b8557611b85611a6d565b5060051b60200190565b600082601f830112611ba057600080fd5b81356020611bad82611b6b565b604051611bba8282611a83565b83815260059390931b8501820192828101915086841115611bda57600080fd5b8286015b84811015611bf55780358352918301918301611bde565b509695505050505050565b600080600080600060a08688031215611c1857600080fd5b611c2186611974565b9450611c2f60208701611974565b9350604086013567ffffffffffffffff80821115611c4c57600080fd5b611c5889838a01611b8f565b94506060880135915080821115611c6e57600080fd5b611c7a89838a01611b8f565b93506080880135915080821115611c9057600080fd5b50611c9d88828901611ab0565b9150509295509295909350565b60008060408385031215611cbd57600080fd5b50508035926020909101359150565b60008060408385031215611cdf57600080fd5b823567ffffffffffffffff80821115611cf757600080fd5b818501915085601f830112611d0b57600080fd5b81356020611d1882611b6b565b604051611d258282611a83565b83815260059390931b8501820192828101915089841115611d4557600080fd5b948201945b83861015611d6a57611d5b86611974565b82529482019490820190611d4a565b96505086013592505080821115611d8057600080fd5b50611b6185828601611b8f565b600081518084526020808501945080840160005b83811015611dbd57815187529582019590820190600101611da1565b509495945050505050565b6020815260006119ed6020830184611d8d565b60008060408385031215611dee57600080fd5b611df783611974565b915060208301358015158114611e0c57600080fd5b809150509250929050565b600080600060608486031215611e2c57600080fd5b83359250602084013567ffffffffffffffff811115611e4a57600080fd5b611e5686828701611ab0565b925050604084013590509250925092565b60008060408385031215611e7a57600080fd5b611e8383611974565b9150611e9160208401611974565b90509250929050565b600080600080600060a08688031215611eb257600080fd5b611ebb86611974565b9450611ec960208701611974565b93506040860135925060608601359150608086013567ffffffffffffffff811115611ef357600080fd5b611c9d88828901611ab0565b600060208284031215611f1157600080fd5b6119ed82611974565b600181811c90821680611f2e57607f821691505b60208210811415611f4f57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611fe357611fe3611fb9565b5060010190565b60008219821115611ffd57611ffd611fb9565b500190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6040815260006120a46040830185611d8d565b82810360208401526120b68185611d8d565b95945050505050565b6001600160a01b0386811682528516602082015260a0604082018190526000906120eb90830186611d8d565b82810360608401526120fd8186611d8d565b9050828103608084015261211181856119f4565b98975050505050505050565b60006020828403121561212f57600080fd5b81516119ed816119ba565b600060033d11156121535760046000803e5060005160e01c5b90565b600060443d10156121645790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561219457505050505090565b82850191508151818111156121ac5750505050505090565b843d87010160208285010111156121c65750505050505090565b6121d560208286010187611a83565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090612262908301846119f4565b97965050505050505056fea2646970667358221220fd3c1c0f79ce525d8c4e0ef2f67b60edafc3472de1586f0aed34f9be061cd5c864736f6c63430008090033","libraries":{},"devdoc":{"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"See {IERC1155-isApprovedForAll}."},"mint(uint256)":{"details":"Mint a particular tokenId "},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"See {IERC1155-safeBatchTransferFrom}."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"See {IERC1155-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC1155-setApprovalForAll}."},"setMaxSupply(uint256,uint256)":{"details":"Set token\'s max supply "},"setTokenPrice(uint256,uint256)":{"details":"Set a price for a token"},"setTokenURI(uint256,string)":{"details":"Set the metadata for a token","params":{"_uri":"The metadata uri (e.g. ipfs://...)","tokenId":"The token ID"}},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"toggleMintingActive(uint256)":{"details":"Set the minting active flag"},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"uri(uint256)":{"details":"Return the URI for a token"},"withdrawETH()":{"details":"Withdraw ether to owner\'s wallet"}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":192,"contract":"contracts/Access.sol:Access","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":198,"contract":"contracts/Access.sol:Access","label":"_operatorApprovals","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":200,"contract":"contracts/Access.sol:Access","label":"_uri","offset":0,"slot":"2","type":"t_string_storage"},{"astId":7,"contract":"contracts/Access.sol:Access","label":"_owner","offset":0,"slot":"3","type":"t_address"},{"astId":123,"contract":"contracts/Access.sol:Access","label":"_status","offset":0,"slot":"4","type":"t_uint256"},{"astId":1970,"contract":"contracts/Access.sol:Access","label":"tokenURIs","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":1974,"contract":"contracts/Access.sol:Access","label":"tokenPrices","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_uint256)"},{"astId":1978,"contract":"contracts/Access.sol:Access","label":"mintingActive","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_bool)"},{"astId":1982,"contract":"contracts/Access.sol:Access","label":"maxSupply","offset":0,"slot":"8","type":"t_mapping(t_uint256,t_uint256)"},{"astId":1986,"contract":"contracts/Access.sol:Access","label":"totalSupply","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_uint256)"},{"astId":1990,"contract":"contracts/Access.sol:Access","label":"creatorAddresses","offset":0,"slot":"10","type":"t_mapping(t_uint256,t_address)"},{"astId":1993,"contract":"contracts/Access.sol:Access","label":"nextTokenId","offset":0,"slot":"11","type":"t_uint256"},{"astId":1995,"contract":"contracts/Access.sol:Access","label":"name","offset":0,"slot":"12","type":"t_string_storage"},{"astId":1997,"contract":"contracts/Access.sol:Access","label":"symbol","offset":0,"slot":"13","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_bool)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}')},175:function(e,n,t){e.exports=t(273)},186:function(e,n){},229:function(e,n){},232:function(e,n){},233:function(e,n){},262:function(e,n){},267:function(e,n){},272:function(e,n){function t(e){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}t.keys=function(){return[]},t.resolve=t,e.exports=t,t.id=272},273:function(e,n,t){"use strict";t.r(n);var a=t(35),r=t.n(a),o=t(158),s=t.n(o),i=t(0),c=t(1),d=t(3),u=t(4),l=t(7),f=t(48),b=t(61),p=t(38),m=t(63),h=t(160),y=t(121),g=t(122),v=t(40),w=t(52),k=t(22),x=t(15),T=t(2),I=t(98),E=t(103),C=t.n(E),_=t(171),R=t.n(_);function A(){A=function(){return e};var e={},n=Object.prototype,t=n.hasOwnProperty,a=Object.defineProperty||function(e,n,t){e[n]=t.value},r="function"==typeof Symbol?Symbol:{},o=r.iterator||"@@iterator",s=r.asyncIterator||"@@asyncIterator",i=r.toStringTag||"@@toStringTag";function c(e,n,t){return Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}),e[n]}try{c({},"")}catch(R){c=function(e,n,t){return e[n]=t}}function d(e,n,t,r){var o=n&&n.prototype instanceof f?n:f,s=Object.create(o.prototype),i=new E(r||[]);return a(s,"_invoke",{value:k(e,t,i)}),s}function u(e,n,t){try{return{type:"normal",arg:e.call(n,t)}}catch(R){return{type:"throw",arg:R}}}e.wrap=d;var l={};function f(){}function b(){}function p(){}var m={};c(m,o,(function(){return this}));var h=Object.getPrototypeOf,y=h&&h(h(C([])));y&&y!==n&&t.call(y,o)&&(m=y);var g=p.prototype=f.prototype=Object.create(m);function v(e){["next","throw","return"].forEach((function(n){c(e,n,(function(e){return this._invoke(n,e)}))}))}function w(e,n){var r;a(this,"_invoke",{value:function(a,o){function s(){return new n((function(r,s){!function a(r,o,s,i){var c=u(e[r],e,o);if("throw"!==c.type){var d=c.arg,l=d.value;return l&&"object"==typeof l&&t.call(l,"__await")?n.resolve(l.__await).then((function(e){a("next",e,s,i)}),(function(e){a("throw",e,s,i)})):n.resolve(l).then((function(e){d.value=e,s(d)}),(function(e){return a("throw",e,s,i)}))}i(c.arg)}(a,o,r,s)}))}return r=r?r.then(s,s):s()}})}function k(e,n,t){var a="suspendedStart";return function(r,o){if("executing"===a)throw new Error("Generator is already running");if("completed"===a){if("throw"===r)throw o;return _()}for(t.method=r,t.arg=o;;){var s=t.delegate;if(s){var i=x(s,t);if(i){if(i===l)continue;return i}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===a)throw a="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);a="executing";var c=u(e,n,t);if("normal"===c.type){if(a=t.done?"completed":"suspendedYield",c.arg===l)continue;return{value:c.arg,done:t.done}}"throw"===c.type&&(a="completed",t.method="throw",t.arg=c.arg)}}}function x(e,n){var t=n.method,a=e.iterator[t];if(void 0===a)return n.delegate=null,"throw"===t&&e.iterator.return&&(n.method="return",n.arg=void 0,x(e,n),"throw"===n.method)||"return"!==t&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+t+"' method")),l;var r=u(a,e.iterator,n.arg);if("throw"===r.type)return n.method="throw",n.arg=r.arg,n.delegate=null,l;var o=r.arg;return o?o.done?(n[e.resultName]=o.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=void 0),n.delegate=null,l):o:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,l)}function T(e){var n={tryLoc:e[0]};1 in e&&(n.catchLoc=e[1]),2 in e&&(n.finallyLoc=e[2],n.afterLoc=e[3]),this.tryEntries.push(n)}function I(e){var n=e.completion||{};n.type="normal",delete n.arg,e.completion=n}function E(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(T,this),this.reset(!0)}function C(e){if(e){var n=e[o];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var a=-1,r=function n(){for(;++a<e.length;)if(t.call(e,a))return n.value=e[a],n.done=!1,n;return n.value=void 0,n.done=!0,n};return r.next=r}}return{next:_}}function _(){return{value:void 0,done:!0}}return b.prototype=p,a(g,"constructor",{value:p,configurable:!0}),a(p,"constructor",{value:b,configurable:!0}),b.displayName=c(p,i,"GeneratorFunction"),e.isGeneratorFunction=function(e){var n="function"==typeof e&&e.constructor;return!!n&&(n===b||"GeneratorFunction"===(n.displayName||n.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,p):(e.__proto__=p,c(e,i,"GeneratorFunction")),e.prototype=Object.create(g),e},e.awrap=function(e){return{__await:e}},v(w.prototype),c(w.prototype,s,(function(){return this})),e.AsyncIterator=w,e.async=function(n,t,a,r,o){void 0===o&&(o=Promise);var s=new w(d(n,t,a,r),o);return e.isGeneratorFunction(t)?s:s.next().then((function(e){return e.done?e.value:s.next()}))},v(g),c(g,i,"Generator"),c(g,o,(function(){return this})),c(g,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var n=Object(e),t=[];for(var a in n)t.push(a);return t.reverse(),function e(){for(;t.length;){var a=t.pop();if(a in n)return e.value=a,e.done=!1,e}return e.done=!0,e}},e.values=C,E.prototype={constructor:E,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(I),!e)for(var n in this)"t"===n.charAt(0)&&t.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function a(t,a){return s.type="throw",s.arg=e,n.next=t,a&&(n.method="next",n.arg=void 0),!!a}for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r],s=o.completion;if("root"===o.tryLoc)return a("end");if(o.tryLoc<=this.prev){var i=t.call(o,"catchLoc"),c=t.call(o,"finallyLoc");if(i&&c){if(this.prev<o.catchLoc)return a(o.catchLoc,!0);if(this.prev<o.finallyLoc)return a(o.finallyLoc)}else if(i){if(this.prev<o.catchLoc)return a(o.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return a(o.finallyLoc)}}}},abrupt:function(e,n){for(var a=this.tryEntries.length-1;a>=0;--a){var r=this.tryEntries[a];if(r.tryLoc<=this.prev&&t.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var o=r;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=n&&n<=o.finallyLoc&&(o=null);var s=o?o.completion:{};return s.type=e,s.arg=n,o?(this.method="next",this.next=o.finallyLoc,l):this.complete(s)},complete:function(e,n){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&n&&(this.next=n),l},finish:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.finallyLoc===e)return this.complete(t.completion,t.afterLoc),I(t),l}},catch:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.tryLoc===e){var a=t.completion;if("throw"===a.type){var r=a.arg;I(t)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,t){return this.delegate={iterator:C(e),resultName:n,nextLoc:t},"next"===this.method&&(this.arg=void 0),l}},e}function S(){return O.apply(this,arguments)}function O(){return(O=Object(l.a)(A().mark((function e(){var n,t,a,r,o,s,i,c,d,u,l,f,b=arguments;return A().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:for(n=b.length>0&&void 0!==b[0]?b[0]:{},t=n.chainId,a=void 0===t?1:t,r={},o=0;o<Object.keys(q).length;o++)s=Object.keys(q)[o],i=q[s].chainId,c=q[s].rpcUrls[0],r[i]=c;return{walletconnect:{package:g.a,options:{infuraId:"cd614bfa5c2f4703b7ab0ec0547d9f81",rpc:r,chainId:a}}},console.log("getting provider via lit connect modal"),d=new m.a.providers.Web3Provider(window.ethereum,"any"),console.log("got provider",d),u=d,e.next=10,d.send("eth_requestAccounts",[]);case 10:return console.log("listing accounts"),e.next=13,u.listAccounts();case 13:return l=e.sent,console.log("accounts",l),f=l[0].toLowerCase(),e.abrupt("return",{web3:u,account:f});case 17:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var M=function(){var e=Object(l.a)(A().mark((function e(n,t,a){var r,o,s;return A().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(r=Object(k.f)(a),!(n instanceof v.b)){e.next=21;break}return e.prev=2,console.log("Signing with personal_sign"),e.next=6,n.provider.send("personal_sign",[Object(T.hexlify)(r),t.toLowerCase()]);case 6:return o=e.sent,e.abrupt("return",o);case 10:if(e.prev=10,e.t0=e.catch(2),console.log("Signing with personal_sign failed, trying signMessage as a fallback"),e.t0 instanceof Error&&(s=e.t0.message),!s.includes("personal_sign")){e.next=18;break}return e.next=17,n.signMessage(r);case 17:return e.abrupt("return",e.sent);case 18:throw e.t0;case 19:e.next=25;break;case 21:return console.log("signing with signMessage"),e.next=24,n.signMessage(r);case 24:return e.abrupt("return",e.sent);case 25:case"end":return e.stop()}}),e,null,[[2,10]])})));return function(n,t,a){return e.apply(this,arguments)}}();function F(e){return B.apply(this,arguments)}function B(){return(B=Object(l.a)(A().mark((function e(n){var t,a,r,o,s,i,c;return A().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t=n.body,a=n.web3,r=n.account,a&&r){e.next=7;break}return e.next=4,S();case 4:o=e.sent,a=o.web3,r=o.account;case 7:return console.log("pausing..."),e.next=10,new Promise((function(e){return setTimeout(e,500)}));case 10:return console.log("signing with ",r),e.next=13,M(a.getSigner(),r,t);case 13:if(s=e.sent,i=Object(w.verifyMessage)(t,s).toLowerCase(),console.log("Signature: ",s),console.log("recovered address: ",i),i===r){e.next=22;break}throw c="ruh roh, the user signed with a different address (".concat(i,") then they're using with web3 (").concat(r,").  this will lead to confusion."),console.error(c),alert("something seems to be wrong with your wallets message signing.  maybe restart your browser or your wallet.  your recovered sig address does not match your web3 account address"),new Error(c);case 22:return e.abrupt("return",{signature:s,address:i});case 23:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function L(e){return U.apply(this,arguments)}function U(){return(U=Object(l.a)(A().mark((function e(n){var t,a,r,o,s,i,c,d,u,l;return A().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=n.web3,a=n.account,r=n.chainId,o=n.resources,s={domain:globalThis.location.host,address:Object(x.a)(a),uri:globalThis.location.origin,version:"1",chainId:r},o&&o.length>0&&(s.resources=o),i=new I.SiweMessage(s),c=i.prepareMessage(),e.next=7,F({body:c,web3:t,account:a});case 7:return d=e.sent,u={sig:d.signature,derivedVia:"web3.eth.personal.sign",signedMessage:c,address:d.address},localStorage.setItem("lit-auth-signature",JSON.stringify(u)),l=R.a.box.keyPair(),localStorage.setItem("lit-comms-keypair",JSON.stringify({publicKey:C.a.encodeBase64(l.publicKey),secretKey:C.a.encodeBase64(l.secretKey)})),console.log("generated and saved lit-comms-keypair"),e.abrupt("return",u);case 14:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function j(e){return D.apply(this,arguments)}function D(){return(D=Object(l.a)(A().mark((function e(n){var t,a,r,o,s,i,c,d,u,l,f,b,p,m;return A().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=n.chain,a=n.resources,r=n.switchChain,o=q[t],e.next=4,S({chainId:o.chainId});case 4:return s=e.sent,i=s.web3,c=s.account,console.log("got web3 and account: ".concat(c)),e.prev=8,e.next=11,i.getNetwork();case 11:u=e.sent,d=u.chainId,e.next=18;break;case 15:e.prev=15,e.t0=e.catch(8),console.log("getNetwork threw an exception",e.t0);case 18:if(l="0x"+o.chainId.toString("16"),console.log("chainId from web3",d),console.log("checkAndSignAuthMessage with chainId ".concat(d," and chain set to ").concat(t," and selectedChain is "),o),d===o.chainId||!r){e.next=43;break}if(!(i.provider instanceof g.a)){e.next=24;break}return e.abrupt("return");case 24:return e.prev=24,console.log("trying to switch to chainId",l),e.next=28,i.provider.request({method:"wallet_switchEthereumChain",params:[{chainId:l}]});case 28:e.next=42;break;case 30:return e.prev=30,e.t1=e.catch(24),console.log("error switching to chainId",e.t1),e.prev=33,f=[{chainId:l,chainName:o.name,nativeCurrency:{name:o.name,symbol:o.symbol,decimals:o.decimals},rpcUrls:o.rpcUrls,blockExplorerUrls:o.blockExplorerUrls}],e.next=37,i.provider.request({method:"wallet_addEthereumChain",params:f});case 37:e.next=42;break;case 39:throw e.prev=39,e.t2=e.catch(33),e.t2;case 42:d=o.chainId;case 43:if(console.log("checking if sig is in local storage"),b=localStorage.getItem("lit-auth-signature")){e.next=50;break}return console.log("signing auth message because sig is not in local storage"),e.next=49,L({web3:i,account:c,chainId:d,resources:a});case 49:b=localStorage.getItem("lit-auth-signature");case 50:if(b=JSON.parse(b),c===b.address){e.next=59;break}return console.log("signing auth message because account is not the same as the address in the auth sig"),e.next=55,L({web3:i,account:c,chainId:o.chainId,resources:a});case 55:b=localStorage.getItem("lit-auth-signature"),b=JSON.parse(b),e.next=66;break;case 59:p=!1;try{m=new I.SiweMessage(b.signedMessage),console.log("parsedSiwe.resources",m.resources),JSON.stringify(m.resources)!==JSON.stringify(a)?(console.log("signing auth message because resources differ from the resources in the auth sig"),p=!0):m.address!==Object(x.a)(m.address)&&(console.log("signing auth message because parsedSig.address is not equal to the same address but checksummed.  This usually means the user had a non-checksummed address saved and so they need to re-sign."),p=!0)}catch(h){console.log("error parsing siwe sig.  making the user sign again: ",h),p=!0}if(!p){e.next=66;break}return e.next=64,L({web3:i,account:c,chainId:o.chainId,resources:a});case 64:b=localStorage.getItem("lit-auth-signature"),b=JSON.parse(b);case 66:return console.log("got auth sig",b),e.abrupt("return",b);case 68:case"end":return e.stop()}}),e,null,[[8,15],[24,30],[33,39]])})))).apply(this,arguments)}function N(e){return P.apply(this,arguments)}function P(){return(P=Object(l.a)(A().mark((function e(n){var t,a,r,o;return A().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=n.chain,a=n.resources,r=n.switchChain,o=void 0===r||r,e.abrupt("return",j({chain:t,resources:a,switchChain:o}));case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var q={ethereum:{contractAddress:"0xA54F7579fFb3F98bd8649fF02813F575f9b3d353",chainId:1,name:"Ethereum",symbol:"ETH",decimals:18,type:"ERC1155",rpcUrls:["https://eth-mainnet.alchemyapi.io/v2/EuGnkVlzVoEkzdg0lpCarhm8YHOxWVxE"],blockExplorerUrls:["https://etherscan.io"],vmType:"EVM"},polygon:{contractAddress:"0x7C7757a9675f06F3BE4618bB68732c4aB25D2e88",chainId:137,name:"Polygon",symbol:"MATIC",decimals:18,rpcUrls:["https://polygon-rpc.com"],blockExplorerUrls:["https://explorer.matic.network"],type:"ERC1155",vmType:"EVM"},fantom:{contractAddress:"0x5bD3Fe8Ab542f0AaBF7552FAAf376Fd8Aa9b3869",chainId:250,name:"Fantom",symbol:"FTM",decimals:18,rpcUrls:["https://rpcapi.fantom.network"],blockExplorerUrls:["https://ftmscan.com"],type:"ERC1155",vmType:"EVM"},xdai:{contractAddress:"0xDFc2Fd83dFfD0Dafb216F412aB3B18f2777406aF",chainId:100,name:"xDai",symbol:"xDai",decimals:18,rpcUrls:["https://rpc.gnosischain.com"],blockExplorerUrls:[" https://blockscout.com/xdai/mainnet"],type:"ERC1155",vmType:"EVM"},bsc:{contractAddress:"0xc716950e5DEae248160109F562e1C9bF8E0CA25B",chainId:56,name:"Binance Smart Chain",symbol:"BNB",decimals:18,rpcUrls:["https://bsc-dataseed.binance.org/"],blockExplorerUrls:[" https://bscscan.com/"],type:"ERC1155",vmType:"EVM"},arbitrum:{contractAddress:"0xc716950e5DEae248160109F562e1C9bF8E0CA25B",chainId:42161,name:"Arbitrum",symbol:"AETH",decimals:18,type:"ERC1155",rpcUrls:["https://arb1.arbitrum.io/rpc"],blockExplorerUrls:["https://arbiscan.io/"],vmType:"EVM"},avalanche:{contractAddress:"0xBB118507E802D17ECDD4343797066dDc13Cde7C6",chainId:43114,name:"Avalanche",symbol:"AVAX",decimals:18,type:"ERC1155",rpcUrls:["https://api.avax.network/ext/bc/C/rpc"],blockExplorerUrls:["https://snowtrace.io/"],vmType:"EVM"},fuji:{contractAddress:"0xc716950e5DEae248160109F562e1C9bF8E0CA25B",chainId:43113,name:"Avalanche FUJI Testnet",symbol:"AVAX",decimals:18,type:"ERC1155",rpcUrls:["https://api.avax-test.network/ext/bc/C/rpc"],blockExplorerUrls:["https://testnet.snowtrace.io/"],vmType:"EVM"},harmony:{contractAddress:"0xBB118507E802D17ECDD4343797066dDc13Cde7C6",chainId:16666e5,name:"Harmony",symbol:"ONE",decimals:18,type:"ERC1155",rpcUrls:["https://api.harmony.one"],blockExplorerUrls:["https://explorer.harmony.one/"],vmType:"EVM"},kovan:{contractAddress:"0x9dB60Db3Dd9311861D87D33B0463AaD9fB4bb0E6",chainId:42,name:"Kovan",symbol:"ETH",decimals:18,rpcUrls:["https://kovan.infura.io/v3/ddf1ca3700f34497bca2bf03607fde38"],blockExplorerUrls:["https://kovan.etherscan.io"],type:"ERC1155",vmType:"EVM"},mumbai:{contractAddress:"0xc716950e5DEae248160109F562e1C9bF8E0CA25B",chainId:80001,name:"Mumbai",symbol:"MATIC",decimals:18,rpcUrls:["https://rpc-mumbai.maticvigil.com/v1/96bf5fa6e03d272fbd09de48d03927b95633726c"],blockExplorerUrls:["https://mumbai.polygonscan.com"],type:"ERC1155",vmType:"EVM"},goerli:{contractAddress:"0xc716950e5DEae248160109F562e1C9bF8E0CA25B",chainId:5,name:"Goerli",symbol:"ETH",decimals:18,rpcUrls:["https://goerli.infura.io/v3/96dffb3d8c084dec952c61bd6230af34"],blockExplorerUrls:["https://goerli.etherscan.io"],type:"ERC1155",vmType:"EVM"},ropsten:{contractAddress:"0x61544f0AE85f8fed6Eb315c406644eb58e15A1E7",chainId:3,name:"Ropsten",symbol:"ETH",decimals:18,rpcUrls:["https://ropsten.infura.io/v3/96dffb3d8c084dec952c61bd6230af34"],blockExplorerUrls:["https://ropsten.etherscan.io"],type:"ERC1155",vmType:"EVM"},rinkeby:{contractAddress:"0xc716950e5deae248160109f562e1c9bf8e0ca25b",chainId:4,name:"Rinkeby",symbol:"ETH",decimals:18,rpcUrls:["https://rinkeby.infura.io/v3/96dffb3d8c084dec952c61bd6230af34"],blockExplorerUrls:["https://rinkeby.etherscan.io"],type:"ERC1155",vmType:"EVM"},cronos:{contractAddress:"0xc716950e5DEae248160109F562e1C9bF8E0CA25B",chainId:25,name:"Cronos",symbol:"CRO",decimals:18,rpcUrls:["https://evm-cronos.org"],blockExplorerUrls:["https://cronos.org/explorer/"],type:"ERC1155",vmType:"EVM"},optimism:{contractAddress:"0xbF68B4c9aCbed79278465007f20a08Fa045281E0",chainId:10,name:"Optimism",symbol:"ETH",decimals:18,rpcUrls:["https://mainnet.optimism.io"],blockExplorerUrls:["https://optimistic.etherscan.io"],type:"ERC1155",vmType:"EVM"},celo:{contractAddress:"0xBB118507E802D17ECDD4343797066dDc13Cde7C6",chainId:42220,name:"Celo",symbol:"CELO",decimals:18,rpcUrls:["https://forno.celo.org"],blockExplorerUrls:["https://explorer.celo.org"],type:"ERC1155",vmType:"EVM"},aurora:{contractAddress:null,chainId:1313161554,name:"Aurora",symbol:"ETH",decimals:18,rpcUrls:["https://mainnet.aurora.dev"],blockExplorerUrls:["https://aurorascan.dev"],type:null,vmType:"EVM"},eluvio:{contractAddress:null,chainId:955305,name:"Eluvio",symbol:"ELV",decimals:18,rpcUrls:["https://host-76-74-28-226.contentfabric.io/eth"],blockExplorerUrls:["https://explorer.eluv.io"],type:null,vmType:"EVM"},alfajores:{contractAddress:null,chainId:44787,name:"Alfajores",symbol:"CELO",decimals:18,rpcUrls:["https://alfajores-forno.celo-testnet.org"],blockExplorerUrls:["https://alfajores-blockscout.celo-testnet.org"],type:null,vmType:"EVM"},xdc:{contractAddress:null,chainId:50,name:"XDC Blockchain",symbol:"XDC",decimals:18,rpcUrls:["https://rpc.xinfin.network"],blockExplorerUrls:["https://explorer.xinfin.network"],type:null,vmType:"EVM"},evmos:{contractAddress:null,chainId:9001,name:"EVMOS",symbol:"EVMOS",decimals:18,rpcUrls:["https://eth.bd.evmos.org:8545"],blockExplorerUrls:["https://evm.evmos.org"],type:null,vmType:"EVM"},evmosTestnet:{contractAddress:null,chainId:9e3,name:"EVMOS Testnet",symbol:"EVMOS",decimals:18,rpcUrls:["https://eth.bd.evmos.dev:8545"],blockExplorerUrls:["https://evm.evmos.dev"],type:null,vmType:"EVM"}};function V(){V=function(){return e};var e={},n=Object.prototype,t=n.hasOwnProperty,a=Object.defineProperty||function(e,n,t){e[n]=t.value},r="function"==typeof Symbol?Symbol:{},o=r.iterator||"@@iterator",s=r.asyncIterator||"@@asyncIterator",i=r.toStringTag||"@@toStringTag";function c(e,n,t){return Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}),e[n]}try{c({},"")}catch(R){c=function(e,n,t){return e[n]=t}}function d(e,n,t,r){var o=n&&n.prototype instanceof f?n:f,s=Object.create(o.prototype),i=new E(r||[]);return a(s,"_invoke",{value:k(e,t,i)}),s}function u(e,n,t){try{return{type:"normal",arg:e.call(n,t)}}catch(R){return{type:"throw",arg:R}}}e.wrap=d;var l={};function f(){}function b(){}function p(){}var m={};c(m,o,(function(){return this}));var h=Object.getPrototypeOf,y=h&&h(h(C([])));y&&y!==n&&t.call(y,o)&&(m=y);var g=p.prototype=f.prototype=Object.create(m);function v(e){["next","throw","return"].forEach((function(n){c(e,n,(function(e){return this._invoke(n,e)}))}))}function w(e,n){var r;a(this,"_invoke",{value:function(a,o){function s(){return new n((function(r,s){!function a(r,o,s,i){var c=u(e[r],e,o);if("throw"!==c.type){var d=c.arg,l=d.value;return l&&"object"==typeof l&&t.call(l,"__await")?n.resolve(l.__await).then((function(e){a("next",e,s,i)}),(function(e){a("throw",e,s,i)})):n.resolve(l).then((function(e){d.value=e,s(d)}),(function(e){return a("throw",e,s,i)}))}i(c.arg)}(a,o,r,s)}))}return r=r?r.then(s,s):s()}})}function k(e,n,t){var a="suspendedStart";return function(r,o){if("executing"===a)throw new Error("Generator is already running");if("completed"===a){if("throw"===r)throw o;return _()}for(t.method=r,t.arg=o;;){var s=t.delegate;if(s){var i=x(s,t);if(i){if(i===l)continue;return i}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===a)throw a="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);a="executing";var c=u(e,n,t);if("normal"===c.type){if(a=t.done?"completed":"suspendedYield",c.arg===l)continue;return{value:c.arg,done:t.done}}"throw"===c.type&&(a="completed",t.method="throw",t.arg=c.arg)}}}function x(e,n){var t=n.method,a=e.iterator[t];if(void 0===a)return n.delegate=null,"throw"===t&&e.iterator.return&&(n.method="return",n.arg=void 0,x(e,n),"throw"===n.method)||"return"!==t&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+t+"' method")),l;var r=u(a,e.iterator,n.arg);if("throw"===r.type)return n.method="throw",n.arg=r.arg,n.delegate=null,l;var o=r.arg;return o?o.done?(n[e.resultName]=o.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=void 0),n.delegate=null,l):o:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,l)}function T(e){var n={tryLoc:e[0]};1 in e&&(n.catchLoc=e[1]),2 in e&&(n.finallyLoc=e[2],n.afterLoc=e[3]),this.tryEntries.push(n)}function I(e){var n=e.completion||{};n.type="normal",delete n.arg,e.completion=n}function E(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(T,this),this.reset(!0)}function C(e){if(e){var n=e[o];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var a=-1,r=function n(){for(;++a<e.length;)if(t.call(e,a))return n.value=e[a],n.done=!1,n;return n.value=void 0,n.done=!0,n};return r.next=r}}return{next:_}}function _(){return{value:void 0,done:!0}}return b.prototype=p,a(g,"constructor",{value:p,configurable:!0}),a(p,"constructor",{value:b,configurable:!0}),b.displayName=c(p,i,"GeneratorFunction"),e.isGeneratorFunction=function(e){var n="function"==typeof e&&e.constructor;return!!n&&(n===b||"GeneratorFunction"===(n.displayName||n.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,p):(e.__proto__=p,c(e,i,"GeneratorFunction")),e.prototype=Object.create(g),e},e.awrap=function(e){return{__await:e}},v(w.prototype),c(w.prototype,s,(function(){return this})),e.AsyncIterator=w,e.async=function(n,t,a,r,o){void 0===o&&(o=Promise);var s=new w(d(n,t,a,r),o);return e.isGeneratorFunction(t)?s:s.next().then((function(e){return e.done?e.value:s.next()}))},v(g),c(g,i,"Generator"),c(g,o,(function(){return this})),c(g,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var n=Object(e),t=[];for(var a in n)t.push(a);return t.reverse(),function e(){for(;t.length;){var a=t.pop();if(a in n)return e.value=a,e.done=!1,e}return e.done=!0,e}},e.values=C,E.prototype={constructor:E,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(I),!e)for(var n in this)"t"===n.charAt(0)&&t.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function a(t,a){return s.type="throw",s.arg=e,n.next=t,a&&(n.method="next",n.arg=void 0),!!a}for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r],s=o.completion;if("root"===o.tryLoc)return a("end");if(o.tryLoc<=this.prev){var i=t.call(o,"catchLoc"),c=t.call(o,"finallyLoc");if(i&&c){if(this.prev<o.catchLoc)return a(o.catchLoc,!0);if(this.prev<o.finallyLoc)return a(o.finallyLoc)}else if(i){if(this.prev<o.catchLoc)return a(o.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return a(o.finallyLoc)}}}},abrupt:function(e,n){for(var a=this.tryEntries.length-1;a>=0;--a){var r=this.tryEntries[a];if(r.tryLoc<=this.prev&&t.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var o=r;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=n&&n<=o.finallyLoc&&(o=null);var s=o?o.completion:{};return s.type=e,s.arg=n,o?(this.method="next",this.next=o.finallyLoc,l):this.complete(s)},complete:function(e,n){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&n&&(this.next=n),l},finish:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.finallyLoc===e)return this.complete(t.completion,t.afterLoc),I(t),l}},catch:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.tryLoc===e){var a=t.completion;if("throw"===a.type){var r=a.arg;I(t)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,t){return this.delegate={iterator:C(e),resultName:n,nextLoc:t},"next"===this.method&&(this.arg=void 0),l}},e}var z=t(264),G="0xdE0D03F110B9fe57C8253e92f400e37FbbA53095",H="0x1f9824245b90c4e33d9866d7BA13F1902eF8654C",W="0x35cA20b4c393dD3C425565E0DC2059Eebe9e1422",X="0x35cA20b4c393dD3C425565E0DC2059Eebe9e1422";function J(e){var n;if("mumbai"==e)n=X;else if("goerli"==e)n=H;else if("ethereum"==e)n=G;else{if("polygon"!=e)throw n="",new Error("Chain name not specified");n=W}return n}function K(e){return Y.apply(this,arguments)}function Y(){return(Y=Object(l.a)(V().mark((function e(n){var t;return V().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,N({chain:n});case 2:return t=e.sent,window.authSig=t,e.abrupt("return",t);case 5:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function Z(){return Q.apply(this,arguments)}function Q(){return(Q=Object(l.a)(V().mark((function e(){var n;return V().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=new z.LitNodeClient,e.next=3,n.connect();case 3:return window.litNodeClient=n,e.abrupt("return",n);case 5:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function $(e,n){return ee.apply(this,arguments)}function ee(){return(ee=Object(l.a)(V().mark((function e(n,t){var a,r,o,s,i,c,d,u;return V().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Z();case 2:return e.sent,a=[{contractAddress:"0x68085453B798adf9C09AD8861e0F0da96B908d81",standardContractType:"ERC1155",chain:t,method:"balanceOf",parameters:[":userAddress","0","1","2","3","4","5"],returnValueTest:{comparator:">",value:"0"}}],console.log("getting authSig"),e.next=7,K(t);case 7:return r=e.sent,console.log("got authSig ",r),o=t,e.next=12,z.encryptString(n);case 12:return s=e.sent,i=s.encryptedString,c=s.symmetricKey,e.next=17,window.litNodeClient.saveEncryptionKey({accessControlConditions:a,symmetricKey:c,authSig:r,chain:o});case 17:return d=e.sent,window.encryptedString=i,e.next=21,z.blobToBase64String(i);case 21:return u=e.sent,e.abrupt("return",{encryptedRealString:u,encryptedSymmetricKey:z.uint8arrayToString(d,"base16")});case 23:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function ne(e,n,t){return te.apply(this,arguments)}function te(){return(te=Object(l.a)(V().mark((function e(n,t,a){var r,o,s,i,c,d,u;return V().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return console.log("Decrypting..."),r=z.base64StringToBlob(n),e.next=4,Z();case 4:return o=e.sent,e.next=7,K(a);case 7:return s=e.sent,i=a,window.accessControlConditions=[{contractAddress:"0x68085453B798adf9C09AD8861e0F0da96B908d81",standardContractType:"ERC1155",chain:a,method:"balanceOf",parameters:[":userAddress","0","1","2","3","4","5"],returnValueTest:{comparator:">",value:"0"}}],c=window.accessControlConditions,e.next=13,o.getEncryptionKey({accessControlConditions:c,toDecrypt:t,chain:i,authSig:s});case 13:return d=e.sent,e.next=16,z.decryptString(r,d);case 16:return u=e.sent,e.abrupt("return",{decryptedString:u});case 18:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function ae(){return re.apply(this,arguments)}function re(){return(re=Object(l.a)(V().mark((function e(){var n,t,a,r=arguments;return V().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.length>0&&void 0!==r[0]?r[0]:"ERC1155",window.accessControlConditions=[{contractAddress:z.LIT_CHAINS[window.chain].contractAddress,standardContractType:n,chain:window.chain,method:"balanceOf",parameters:[":userAddress",window.tokenId.toString()],returnValueTest:{comparator:">",value:"0"}}],t="/"+Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15),window.resourceId={baseUrl:"my-dynamic-content-server.com",path:t,orgId:"",role:"",extraData:""},a=new z.LitNodeClient,e.next=7,a.connect();case 7:return window.litNodeClient=a,console.log("Lit client connected",a),console.log("Window.litNodeClient",window.litNodeClient),e.next=12,a.saveSigningCondition({accessControlConditions:window.accessControlConditions,chain:window.chain,authSig:window.authSig,resourceId:window.resourceId});case 12:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function oe(){return se.apply(this,arguments)}function se(){return(se=Object(l.a)(V().mark((function e(){var n,t,a,r,o,s,i=arguments;return V().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=i.length>0&&void 0!==i[0]?i[0]:"ERC1155",t=i.length>1?i[1]:void 0,a=i.length>2?i[2]:void 0,r=i.length>3?i[3]:void 0,window.accessControlConditions=[{contractAddress:t,standardContractType:n,chain:r,method:"balanceOf",parameters:[":userAddress",a],returnValueTest:{comparator:">",value:"0"}}],o="/"+Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15),window.resourceId={baseUrl:"my-dynamic-content-server.com",path:o,orgId:"",role:"",extraData:""},s=new z.LitNodeClient,e.next=10,s.connect();case 10:return window.litNodeClient=s,console.log("Lit client connected",s),console.log("Window.litNodeClient",window.litNodeClient),e.next=15,s.saveSigningCondition({accessControlConditions:window.accessControlConditions,chain:r,authSig:window.authSig,resourceId:window.resourceId});case 15:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function ie(e,n){return ce.apply(this,arguments)}function ce(){return(ce=Object(l.a)(V().mark((function e(n,t){var a,r,o,s,i=arguments;return V().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=i.length>2&&void 0!==i[2]?i[2]:"ERC1155",r=i.length>3&&void 0!==i[3]?i[3]:"0",window.accessControlConditions=[{contractAddress:n,standardContractType:a,chain:t,method:"balanceOf",parameters:[":userAddress","0","1","2","3","4","5"],returnValueTest:{comparator:">",value:r}}],o="/"+Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15),window.resourceId={baseUrl:"lit-estuary-storage.herokuapp.com/",path:o,orgId:"",role:"",extraData:""},s=new z.LitNodeClient,e.next=8,s.connect();case 8:return window.litNodeClient=s,console.log("Lit client connected",s),console.log("Window.litNodeClient",window.litNodeClient),e.next=13,s.saveSigningCondition({accessControlConditions:window.accessControlConditions,chain:t,authSig:window.authSig,resourceId:window.resourceId});case 13:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function de(e){return ue.apply(this,arguments)}function ue(){return(ue=Object(l.a)(V().mark((function e(n){var t;return V().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return console.log("IN REQUEST JWT"),t=new z.LitNodeClient,e.next=4,t.connect();case 4:return window.litNodeClient=t,console.log("Lit client connected",t),console.log("Window.litNodeClient",window.litNodeClient),console.log("Checking params for jwt"),console.log("window.accessControlConditions is ",window.accessControlConditions),console.log("chainName is ",n),console.log("Auth Sig is ",window.authSig),console.log("window.resourceId is ",window.resourceId),e.next=14,t.getSignedToken({accessControlConditions:window.accessControlConditions,chain:n,authSig:window.authSig,resourceId:window.resourceId});case 14:window.jwt=e.sent,console.log("What is window.jwt? ",window.jwt);case 16:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function le(e,n,t){return fe.apply(this,arguments)}function fe(){return(fe=Object(l.a)(V().mark((function e(n,t,a){var r,o,s,i,c,d,u,l,f,b,h;return V().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return console.log("minting ".concat(t," tokens on ").concat(window.chain)),e.prev=1,r=window.chain,e.next=5,j({chain:r,switchChain:!0});case 5:if(!(o=e.sent).errorCode){e.next=8;break}return e.abrupt("return",o);case 8:return e.next=10,S();case 10:if(s=e.sent,i=s.web3,c=s.account,d=i.getSigner(),u=J(window.chain)){e.next=18;break}return console.log("No token address for this chain.  It's not supported via MintLIT."),e.abrupt("return");case 18:return l=new p.Contract(u,y.abi,i.getSigner()),console.log("sending to chain..."),console.log("line 940"),e.next=23,l.interface.encodeFunctionData("mint",[n]);case 23:return f=e.sent,console.log("Got here"),console.log("Price is ",a),console.log("Price parsed in ehters is ",m.a.utils.parseUnits(a)),{to:u,value:m.a.utils.parseUnits(a),data:f,from:c},console.log("Got txnParams"),e.next=31,d.sendTransaction({to:u,value:m.a.utils.parseUnits(a),data:f,gasLimit:3e6});case 31:return b=e.sent,console.log("Transaction:",b),console.log("sent to chain.  waiting to be mined..."),e.next=36,b.wait();case 36:return h=e.sent,console.log("Receipt:",h),e.abrupt("return",{txHash:h.transactionHash,tknId:n,tokenAddress:u,mintingAddress:c,authSig:o});case 41:return e.prev=41,e.t0=e.catch(1),console.log(e.t0),e.abrupt("return",{errorCode:"unknown_error"});case 45:case"end":return e.stop()}}),e,null,[[1,41]])})))).apply(this,arguments)}function be(e,n,t,a){return pe.apply(this,arguments)}function pe(){return(pe=Object(l.a)(V().mark((function e(n,t,a,r){var o,s,i,c,d,u,l;return V().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,S();case 3:return o=e.sent,s=o.web3,o.account,i=J(r),c=new p.Contract(i,y.abi,s.getSigner()),console.log("sending to chain..."),e.next=11,c.createToken(m.a.utils.parseUnits(n),a,t);case 11:return d=e.sent,console.log("sent to chain.  waiting to be mined..."),e.next=15,d.wait();case 15:return u=e.sent,console.log("txReceipt: ",u),l=parseInt(u.events[0].data,16),e.abrupt("return",l);case 21:return e.prev=21,e.t0=e.catch(0),console.log(e.t0),e.abrupt("return",{errorCode:"unknown_error"});case 25:case"end":return e.stop()}}),e,null,[[0,21]])})))).apply(this,arguments)}function me(e,n,t){return he.apply(this,arguments)}function he(){return(he=Object(l.a)(V().mark((function e(n,t,a){var r,o;return V().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return console.log("Minting NFT, please wait for the tx to confirm..."),window.chain=n,e.next=4,le(t,1,a);case 4:return r=e.sent,o=r.txHash,r.tokenId,r.tokenAddress,r.mintingAddress,r.authSig,e.abrupt("return",o);case 11:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function ye(e){return ge.apply(this,arguments)}function ge(){return(ge=Object(l.a)(V().mark((function e(n){var t,a,r,o,s,i,c,d,u,l,f;return V().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=n.chain,a=n.quantity,console.log("minting ".concat(a," tokens on ").concat(t)),e.prev=2,e.next=5,j({chain:t,switchChain:!0});case 5:if(!(r=e.sent).errorCode){e.next=8;break}return e.abrupt("return",r);case 8:return e.next=10,S();case 10:if(o=e.sent,s=o.web3,i=o.account,c=q[t].contractAddress){e.next=17;break}return console.log("No token address for this chain.  It's not supported via MintLIT."),e.abrupt("return");case 17:return d=new p.Contract(c,h.abi,s.getSigner()),console.log("sending to chain..."),e.next=21,d.mint(a);case 21:return u=e.sent,console.log("sent to chain.  waiting to be mined..."),e.next=25,u.wait();case 25:return l=e.sent,console.log("txReceipt: ",l),f=l.events[0].args[3].toNumber(),e.abrupt("return",{txHash:l.transactionHash,tokenId:f,tokenAddress:c,mintingAddress:i,authSig:r});case 31:return e.prev=31,e.t0=e.catch(2),console.log(e.t0),e.abrupt("return",{errorCode:"unknown_error"});case 35:case"end":return e.stop()}}),e,null,[[2,31]])})))).apply(this,arguments)}function ve(e){return we.apply(this,arguments)}function we(){return(we=Object(l.a)(V().mark((function e(n){var t,a,r,o,s;return V().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return console.log("Minting NFT, please wait for the tx to confirm..."),window.chain=n,e.next=4,ye({chain:window.chain,quantity:1});case 4:return t=e.sent,a=t.txHash,r=t.tokenId,o=t.tokenAddress,t.mintingAddress,s=t.authSig,window.tokenId=r,window.tokenAddress=o,window.authSig=s,e.abrupt("return",a);case 14:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function ke(e,n){return xe.apply(this,arguments)}function xe(){return(xe=Object(l.a)(V().mark((function e(n,t){var a,r,o=arguments;return V().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=o.length>2&&void 0!==o[2]?o[2]:"ERC1155",r=o.length>3&&void 0!==o[3]?o[3]:"0",e.prev=2,e.next=5,K(t);case 5:return e.next=7,ie(n,t,a,r);case 7:return e.next=9,de(t);case 9:return console.log("You're logged in!"),console.log("window.jwt",window.jwt),e.abrupt("return",!0);case 14:return e.prev=14,e.t0=e.catch(2),console.log("Error",e.t0),e.abrupt("return",!1);case 18:case"end":return e.stop()}}),e,null,[[2,14]])})))).apply(this,arguments)}function Te(e){return Ie.apply(this,arguments)}function Ie(){return(Ie=Object(l.a)(V().mark((function e(n){var t,a,r=arguments;return V().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.length>1&&void 0!==r[1]?r[1]:"ERC1155",e.prev=1,e.next=4,K(n);case 4:return e.next=6,ve(n);case 6:return a=e.sent,console.log("tx",a),e.next=10,ae(t);case 10:return e.next=12,de(n);case 12:return console.log("You're logged in!"),console.log("window.jwt",window.jwt),e.abrupt("return",!0);case 17:return e.prev=17,e.t0=e.catch(1),console.log("Error",e.t0),e.abrupt("return",!1);case 21:case"end":return e.stop()}}),e,null,[[1,17]])})))).apply(this,arguments)}function Ee(e,n,t){return Ce.apply(this,arguments)}function Ce(){return(Ce=Object(l.a)(V().mark((function e(n,t,a){var r,o;return V().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,r=J(n),e.next=4,me(n,t,a);case 4:return o=e.sent,e.next=7,K(n);case 7:return console.log("tx",o),console.log("Provisioning Access 3"),e.next=11,oe("ERC1155",r,t,n);case 11:return console.log("Requesting JWT"),e.next=14,de(n);case 14:return console.log("You're logged in!"),console.log("window.jwt",window.jwt),e.abrupt("return",!0);case 19:return e.prev=19,e.t0=e.catch(0),console.log("Error",e.t0),e.abrupt("return",!1);case 23:case"end":return e.stop()}}),e,null,[[0,19]])})))).apply(this,arguments)}function _e(){_e=function(){return e};var e={},n=Object.prototype,t=n.hasOwnProperty,a=Object.defineProperty||function(e,n,t){e[n]=t.value},r="function"==typeof Symbol?Symbol:{},o=r.iterator||"@@iterator",s=r.asyncIterator||"@@asyncIterator",i=r.toStringTag||"@@toStringTag";function c(e,n,t){return Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}),e[n]}try{c({},"")}catch(R){c=function(e,n,t){return e[n]=t}}function d(e,n,t,r){var o=n&&n.prototype instanceof f?n:f,s=Object.create(o.prototype),i=new E(r||[]);return a(s,"_invoke",{value:k(e,t,i)}),s}function u(e,n,t){try{return{type:"normal",arg:e.call(n,t)}}catch(R){return{type:"throw",arg:R}}}e.wrap=d;var l={};function f(){}function b(){}function p(){}var m={};c(m,o,(function(){return this}));var h=Object.getPrototypeOf,y=h&&h(h(C([])));y&&y!==n&&t.call(y,o)&&(m=y);var g=p.prototype=f.prototype=Object.create(m);function v(e){["next","throw","return"].forEach((function(n){c(e,n,(function(e){return this._invoke(n,e)}))}))}function w(e,n){var r;a(this,"_invoke",{value:function(a,o){function s(){return new n((function(r,s){!function a(r,o,s,i){var c=u(e[r],e,o);if("throw"!==c.type){var d=c.arg,l=d.value;return l&&"object"==typeof l&&t.call(l,"__await")?n.resolve(l.__await).then((function(e){a("next",e,s,i)}),(function(e){a("throw",e,s,i)})):n.resolve(l).then((function(e){d.value=e,s(d)}),(function(e){return a("throw",e,s,i)}))}i(c.arg)}(a,o,r,s)}))}return r=r?r.then(s,s):s()}})}function k(e,n,t){var a="suspendedStart";return function(r,o){if("executing"===a)throw new Error("Generator is already running");if("completed"===a){if("throw"===r)throw o;return _()}for(t.method=r,t.arg=o;;){var s=t.delegate;if(s){var i=x(s,t);if(i){if(i===l)continue;return i}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===a)throw a="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);a="executing";var c=u(e,n,t);if("normal"===c.type){if(a=t.done?"completed":"suspendedYield",c.arg===l)continue;return{value:c.arg,done:t.done}}"throw"===c.type&&(a="completed",t.method="throw",t.arg=c.arg)}}}function x(e,n){var t=n.method,a=e.iterator[t];if(void 0===a)return n.delegate=null,"throw"===t&&e.iterator.return&&(n.method="return",n.arg=void 0,x(e,n),"throw"===n.method)||"return"!==t&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+t+"' method")),l;var r=u(a,e.iterator,n.arg);if("throw"===r.type)return n.method="throw",n.arg=r.arg,n.delegate=null,l;var o=r.arg;return o?o.done?(n[e.resultName]=o.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=void 0),n.delegate=null,l):o:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,l)}function T(e){var n={tryLoc:e[0]};1 in e&&(n.catchLoc=e[1]),2 in e&&(n.finallyLoc=e[2],n.afterLoc=e[3]),this.tryEntries.push(n)}function I(e){var n=e.completion||{};n.type="normal",delete n.arg,e.completion=n}function E(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(T,this),this.reset(!0)}function C(e){if(e){var n=e[o];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var a=-1,r=function n(){for(;++a<e.length;)if(t.call(e,a))return n.value=e[a],n.done=!1,n;return n.value=void 0,n.done=!0,n};return r.next=r}}return{next:_}}function _(){return{value:void 0,done:!0}}return b.prototype=p,a(g,"constructor",{value:p,configurable:!0}),a(p,"constructor",{value:b,configurable:!0}),b.displayName=c(p,i,"GeneratorFunction"),e.isGeneratorFunction=function(e){var n="function"==typeof e&&e.constructor;return!!n&&(n===b||"GeneratorFunction"===(n.displayName||n.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,p):(e.__proto__=p,c(e,i,"GeneratorFunction")),e.prototype=Object.create(g),e},e.awrap=function(e){return{__await:e}},v(w.prototype),c(w.prototype,s,(function(){return this})),e.AsyncIterator=w,e.async=function(n,t,a,r,o){void 0===o&&(o=Promise);var s=new w(d(n,t,a,r),o);return e.isGeneratorFunction(t)?s:s.next().then((function(e){return e.done?e.value:s.next()}))},v(g),c(g,i,"Generator"),c(g,o,(function(){return this})),c(g,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var n=Object(e),t=[];for(var a in n)t.push(a);return t.reverse(),function e(){for(;t.length;){var a=t.pop();if(a in n)return e.value=a,e.done=!1,e}return e.done=!0,e}},e.values=C,E.prototype={constructor:E,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(I),!e)for(var n in this)"t"===n.charAt(0)&&t.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function a(t,a){return s.type="throw",s.arg=e,n.next=t,a&&(n.method="next",n.arg=void 0),!!a}for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r],s=o.completion;if("root"===o.tryLoc)return a("end");if(o.tryLoc<=this.prev){var i=t.call(o,"catchLoc"),c=t.call(o,"finallyLoc");if(i&&c){if(this.prev<o.catchLoc)return a(o.catchLoc,!0);if(this.prev<o.finallyLoc)return a(o.finallyLoc)}else if(i){if(this.prev<o.catchLoc)return a(o.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return a(o.finallyLoc)}}}},abrupt:function(e,n){for(var a=this.tryEntries.length-1;a>=0;--a){var r=this.tryEntries[a];if(r.tryLoc<=this.prev&&t.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var o=r;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=n&&n<=o.finallyLoc&&(o=null);var s=o?o.completion:{};return s.type=e,s.arg=n,o?(this.method="next",this.next=o.finallyLoc,l):this.complete(s)},complete:function(e,n){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&n&&(this.next=n),l},finish:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.finallyLoc===e)return this.complete(t.completion,t.afterLoc),I(t),l}},catch:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.tryLoc===e){var a=t.completion;if("throw"===a.type){var r=a.arg;I(t)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,t){return this.delegate={iterator:C(e),resultName:n,nextLoc:t},"next"===this.method&&(this.arg=void 0),l}},e}function Re(){return Ae.apply(this,arguments)}function Ae(){return(Ae=Object(l.a)(_e().mark((function e(){var n,t,a;return _e().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=new b.providers.Web3Provider(window.ethereum,"any"),e.next=3,window.ethereum.request({method:"eth_requestAccounts"});case 3:return e.sent,e.next=6,n.send("eth_requestAccounts",[]);case 6:return window.ethereum.on("accountsChanged",(function(e){})),t=n.getSigner(),t="0",t=n.getSigner(),e.next=12,t.getAddress();case 12:return a=e.sent,e.abrupt("return",a);case 14:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function Se(e,n){return Oe.apply(this,arguments)}function Oe(){return(Oe=Object(l.a)(_e().mark((function e(n,t){var a,r,o,s,i,c,d,u=arguments;return _e().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=u.length>2&&void 0!==u[2]?u[2]:"0x8967BCF84170c91B0d24D4302C2376283b0B3a07",console.log("Sending OCEAN initiated"),r=a,o=[{name:"transfer",type:"function",inputs:[{name:"_to",type:"address"},{type:"uint256",name:"_tokens"}],constant:!1,outputs:[{name:"",type:"bool"}],payable:!1}],console.log("Parameters defined"),s=new b.providers.Web3Provider(window.ethereum,"any"),e.next=8,s.send("eth_requestAccounts",[]);case 8:i=s.getSigner(),c=new p.Contract(r,o,i),console.log("Contract defined"),d=b.utils.parseUnits(t,18),console.log("numberOfTokens: ".concat(d)),console.log("Ready to transfer"),c.transfer(n,d).then((function(e){console.dir(e),console.log("sent token")})),console.log("Done: see address below on etherscan"),console.log(n);case 17:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var Me=function(e){Object(d.a)(t,e);var n=Object(u.a)(t);function t(){var e;Object(c.a)(this,t);for(var a=arguments.length,o=new Array(a),s=0;s<a;s++)o[s]=arguments[s];return(e=n.call.apply(n,[this].concat(o))).state={walletAddress:"not",transaction:"",isFocused:!1,encryptedString:"",encryptedSymmetricKey:"",decryptedString:"",loggedIn:!1,tokenId:""},e.render=function(){var n=e.props.theme,t={};if(n){var a="0px solid ".concat(e.state.isFocused?n.primaryColor:"gray"),o="".concat(e.state.isFocused?"#4F8BF9":"#FF4B4B");t.border=a,t.outline=a,t.backgroundColor=o,t.color="white",t.borderRadius="0.2rem",t.height="2em"}var s=e.props.args.message;return r.a.createElement("span",null,r.a.createElement("button",{style:t,onClick:e.onClicked,disabled:e.props.disabled,onFocus:e._onFocus,onBlur:e._onBlur,onMouseOver:e._onFocus,onMouseOut:e._onBlur},s))},e.onClicked=Object(l.a)(_e().mark((function n(){var t,a,r,o,s,i,c,d,u,l,b;return _e().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if("wallet"!==e.props.args.key){n.next=7;break}return n.next=3,Re();case 3:t=n.sent,e.setState((function(){return{walletAddress:t}}),(function(){return f.a.setComponentValue(e.state.walletAddress)})),n.next=61;break;case 7:if("send"!==e.props.args.key){n.next=14;break}return n.next=10,Se(e.props.args.to_address,e.props.args.amount,e.props.args.contract_address);case 10:a=n.sent,e.setState((function(){return{transaction:a}}),(function(){return f.a.setComponentValue(e.state.transaction)})),n.next=61;break;case 14:if("encrypt"!==e.props.args.key){n.next=23;break}return n.next=17,$(e.props.args.message_to_encrypt,e.props.args.chain_name);case 17:r=n.sent,o=r.encryptedRealString,s=r.encryptedSymmetricKey,e.setState((function(){return{encryptedString:o,encryptedSymmetricKey:s}}),(function(){return f.a.setComponentValue({encryptedRealString:o,encryptedSymmetricKey:s})})),n.next=61;break;case 23:if("decrypt"!==e.props.args.key){n.next=32;break}return n.next=26,ne(e.props.args.encrypted_string,e.props.args.encrypted_symmetric_key,e.props.args.chain_name);case 26:i=n.sent,c=i.decryptedString,e.setState((function(){return{decryptedString:c}}),(function(){return f.a.setComponentValue(c)})),console.log("State of encrypted string3:",e.state.encryptedString),n.next=61;break;case 32:if("login"!==e.props.args.key){n.next=39;break}return n.next=35,ke(e.props.args.auth_token_contract_address,e.props.args.chain_name,e.props.args.contract_type,e.props.args.num_tokens);case 35:d=n.sent,e.setState((function(){return{loggedIn:d}}),(function(){return f.a.setComponentValue(d)})),n.next=61;break;case 39:if("mint_and_login"!==e.props.args.key){n.next=46;break}return n.next=42,Te(e.props.args.chain_name,e.props.args.contract_type);case 42:u=n.sent,e.setState((function(){return{loggedIn:u}}),(function(){return f.a.setComponentValue(u)})),n.next=61;break;case 46:if("create_token"!==e.props.args.key){n.next=54;break}return n.next=49,be(e.props.args.price,e.props.args.supply,e.props.args.uri,e.props.args.chain_name);case 49:l=n.sent,console.log("Token ID: ",l),e.setState((function(){return{tokenId:l}}),(function(){return f.a.setComponentValue(l)})),n.next=61;break;case 54:if("mint_and_login_algovera"!==e.props.args.key){n.next=61;break}return console.log("Token ID is: ",e.props.args.token_id),n.next=58,Ee(e.props.args.chain_name,e.props.args.token_id,e.props.args.price);case 58:b=n.sent,console.log("Logged in: ",b),e.setState((function(){return{loggedIn:b}}),(function(){return f.a.setComponentValue(b)}));case 61:case"end":return n.stop()}}),n)}))),e._onFocus=function(){e.setState({isFocused:!0})},e._onBlur=function(){e.setState({isFocused:!1})},e}return Object(i.a)(t)}(f.b),Fe=Object(f.c)(Me);s.a.render(r.a.createElement(r.a.StrictMode,null,r.a.createElement(Fe,null)),document.getElementById("root"))}},[[175,1,2]]]);
//# sourceMappingURL=main.450cb4aa.chunk.js.map